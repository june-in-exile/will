{"abi":[{"type":"function","name":"createTestament","inputs":[{"name":"zkp","type":"bytes[]","internalType":"bytes[]"},{"name":"params","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"executeTestament","inputs":[{"name":"testator_id","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getTestament","inputs":[{"name":"testator_id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"uploadTestament","inputs":[{"name":"zkp","type":"bytes[]","internalType":"bytes[]"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"validateTestament","inputs":[{"name":"_signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createTestament(bytes[],bytes)":"652ffe84","executeTestament(uint256)":"b13d713b","getTestament(uint256)":"132bb5e1","uploadTestament(bytes[],bytes)":"c05415e4","validateTestament(bytes)":"1e2a96dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"zkp\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"createTestament\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"testator_id\",\"type\":\"uint256\"}],\"name\":\"executeTestament\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"testator_id\",\"type\":\"uint256\"}],\"name\":\"getTestament\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"zkp\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"uploadTestament\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"validateTestament\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createTestament(bytes[],bytes)\":{\"params\":{\"params\":\"the parameters for deployment\",\"zkp\":\"zero-knowledge proof\"}},\"executeTestament(uint256)\":{\"params\":{\"testator_id\":\"The testator's id\"}},\"getTestament(uint256)\":{\"params\":{\"testator_id\":\"The testator's id\"},\"returns\":{\"_0\":\"_data the encrypted testament\"}},\"uploadTestament(bytes[],bytes)\":{\"params\":{\"_data\":\"the encrypted testament to be stored\",\"zkp\":\"zero-knowledge proof\"},\"returns\":{\"_0\":\"testator_id The testator's id\"}},\"validateTestament(bytes)\":{\"params\":{\"_signature\":\"the signature from the court\"},\"returns\":{\"_0\":\"isValid The verification result\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createTestament(bytes[],bytes)\":{\"notice\":\"verify ZKP and deploy the testemant contract\"},\"executeTestament(uint256)\":{\"notice\":\"execute the testament contract\"},\"getTestament(uint256)\":{\"notice\":\"get the encrypted testament\"},\"uploadTestament(bytes[],bytes)\":{\"notice\":\"verify ZKP and store encrypted testament\"},\"validateTestament(bytes)\":{\"notice\":\"verify the court's signature and validate the encrypted testament\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ITestamentFactory.sol\":\"ITestamentFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/ITestamentFactory.sol\":{\"keccak256\":\"0x01344bf9188b6d2e960f1b34bf4c5a525d38fac29082784f29fa85d48060a634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3c546ce841e669885609501f4555ef37b0a0ebbc9b37a6d5f56896fcfa41e8e\",\"dweb:/ipfs/QmS99DfaGatCLR9bNkQPCRtnn9gAHTFqddzTUWSSdmVEQJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"zkp","type":"bytes[]"},{"internalType":"bytes","name":"params","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createTestament"},{"inputs":[{"internalType":"uint256","name":"testator_id","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"executeTestament"},{"inputs":[{"internalType":"uint256","name":"testator_id","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getTestament","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"bytes[]","name":"zkp","type":"bytes[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"uploadTestament","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"validateTestament","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"createTestament(bytes[],bytes)":{"params":{"params":"the parameters for deployment","zkp":"zero-knowledge proof"}},"executeTestament(uint256)":{"params":{"testator_id":"The testator's id"}},"getTestament(uint256)":{"params":{"testator_id":"The testator's id"},"returns":{"_0":"_data the encrypted testament"}},"uploadTestament(bytes[],bytes)":{"params":{"_data":"the encrypted testament to be stored","zkp":"zero-knowledge proof"},"returns":{"_0":"testator_id The testator's id"}},"validateTestament(bytes)":{"params":{"_signature":"the signature from the court"},"returns":{"_0":"isValid The verification result"}}},"version":1},"userdoc":{"kind":"user","methods":{"createTestament(bytes[],bytes)":{"notice":"verify ZKP and deploy the testemant contract"},"executeTestament(uint256)":{"notice":"execute the testament contract"},"getTestament(uint256)":{"notice":"get the encrypted testament"},"uploadTestament(bytes[],bytes)":{"notice":"verify ZKP and store encrypted testament"},"validateTestament(bytes)":{"notice":"verify the court's signature and validate the encrypted testament"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ITestamentFactory.sol":"ITestamentFactory"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/interfaces/ITestamentFactory.sol":{"keccak256":"0x01344bf9188b6d2e960f1b34bf4c5a525d38fac29082784f29fa85d48060a634","urls":["bzz-raw://a3c546ce841e669885609501f4555ef37b0a0ebbc9b37a6d5f56896fcfa41e8e","dweb:/ipfs/QmS99DfaGatCLR9bNkQPCRtnn9gAHTFqddzTUWSSdmVEQJ"],"license":"MIT"}},"version":1},"id":44}