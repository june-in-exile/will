// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

interface IVerifierConstants {
    function getIC(uint256 index) external pure returns (uint256 x, uint256 y);
    function getICCount() external pure returns (uint256);
}

contract VerifierConstants3 is IVerifierConstants {
    uint256 constant IC196x = 7207487091651638233336767306343297681803055545854318874325483106171901788443;
    uint256 constant IC196y = 7208585923918330721793061308019024243775960771212363585447645753832643554372;
    uint256 constant IC197x = 11005891379505047780217121068846576174981168635114443423598739700818026049739;
    uint256 constant IC197y = 13930131983417820106783703759442664199329076893074532194564847427283917449265;
    uint256 constant IC198x = 20393504332745664886313062694430929834597175020242761926870603001742083902721;
    uint256 constant IC198y = 11038152349734229854227173926045412783176820734965986232966551996566134309890;
    uint256 constant IC199x = 12625603211759707480291075587112737687264668438791166726355298345742383014375;
    uint256 constant IC199y = 2401889166301501779427175660352444607821717133054588162704671329194440400032;
    uint256 constant IC200x = 21364703547781613018155063828718684116598395194401609592461929515284176314259;
    uint256 constant IC200y = 2129209184292997241888683952024538260181886018610857114281777180488009885768;
    uint256 constant IC201x = 7387423732409190249508793560633484948425380704052754463589192356807646854636;
    uint256 constant IC201y = 11926733467618434353860629887367009646875944093264928589998926796866676711414;
    uint256 constant IC202x = 62230581343814130685694720057788160014384911076488464148265491930292394607;
    uint256 constant IC202y = 3566541958647617867789632725187606884828027271531605318223165692886893233192;
    uint256 constant IC203x = 9218300289330866311037907566609124705557935202075003323085738965937256435292;
    uint256 constant IC203y = 157804173550159729673033595343154624292930385714001716914492023495366043164;
    uint256 constant IC204x = 19473394742545229767856479822419911891862961133768996964785582417133520046298;
    uint256 constant IC204y = 7066025686463877276572263219458403722887229881274489808794510439210164968277;
    uint256 constant IC205x = 10356255159704789147046613364637590361427885682695487034690514617287909443791;
    uint256 constant IC205y = 20021893702952491649542017265597358287613965430329460258456418615602988481712;
    uint256 constant IC206x = 21863732812727223943983669479359908679154272985500207367718771894610464265652;
    uint256 constant IC206y = 8320028150343803461548971651691789567983932747680495028024261715622396749915;
    uint256 constant IC207x = 1540358610481474019779822292769058051349641281103976385123817050828370925234;
    uint256 constant IC207y = 4207504608522205919137504107186107704476232786323460992318306896033149416436;
    uint256 constant IC208x = 14336821341727600291815284730386336596411461896941493936558344971815319867113;
    uint256 constant IC208y = 20936835819581175428770031107263047520463345914274932801845037405570628051549;
    uint256 constant IC209x = 16015356774019624934006777751727095029485973071779616286438141396533087112497;
    uint256 constant IC209y = 3826696419146631711210591234039170418606508361862259215430017671313059662710;
    uint256 constant IC210x = 13749292663329711725923183271177871931172230781368779873291822179203221367622;
    uint256 constant IC210y = 16852492612701191793756740942734713578237330153656914404743418249236730359048;
    uint256 constant IC211x = 19157660738614849614325835434292281241306943846460380859638590228486397604337;
    uint256 constant IC211y = 11049661964747503743607731498341133022482015425599366014250487539065176889326;
    uint256 constant IC212x = 17626743690265003404826719052058980543188974737731407528053705058303896409826;
    uint256 constant IC212y = 13328556628928759501342159780114721978633137470795676411631757328081721432130;
    uint256 constant IC213x = 3234752887774318158562447466681795172344295021551645495320009135221887148125;
    uint256 constant IC213y = 13715650614550630805484839269733660670872177141586430890943827533734471076073;
    uint256 constant IC214x = 10090074568111217274380588444232767958964952267955081226882218595092021770057;
    uint256 constant IC214y = 12537335940058066363462432184111181725790174209212336641838637038607032992630;
    uint256 constant IC215x = 8780868666949231309481699623464112603047799705758541937258416571662178433589;
    uint256 constant IC215y = 14102482927008366990960816294456904477662586200361278508550301720423567481798;
    uint256 constant IC216x = 1466322599999398413438606789685483558405240780451679385297392339741415463776;
    uint256 constant IC216y = 4240421657320243815792472424536857252710942728098069960170517493493436158080;
    uint256 constant IC217x = 21321434500043265572046785020931599226303890232605298885150897571357735590330;
    uint256 constant IC217y = 7850314283167733203244503521165888070201308985282983851367816876473537984376;
    uint256 constant IC218x = 3896397738179463754755804055732395004139820134377710845860342333376639338068;
    uint256 constant IC218y = 17638385936906588907035840993657576553652255775529891487709428340980509961188;
    uint256 constant IC219x = 12852540770730549486751426242987157514386360906148273301367149404944552301429;
    uint256 constant IC219y = 4765675069255070998841236026230126969158509848157034327374010036353173229306;
    uint256 constant IC220x = 20876236979863143566124737980961459896171968299863217726070588128341920786978;
    uint256 constant IC220y = 20659415425819241443274358039094046430944178918936017585257042077346096674263;
    uint256 constant IC221x = 4864496104510214005091617206473805385834823297163738103291059577223471973875;
    uint256 constant IC221y = 21412654444776045163811130917010534942393202704037855266255343878456884680651;
    uint256 constant IC222x = 6567182853892183335698538786718432250117439123404367673302009940002637204661;
    uint256 constant IC222y = 4906390038927036339929280505298329077233673246372813959746973787944417298254;
    uint256 constant IC223x = 12847369315560672227527888517125618193884520216158660087430943747271216717379;
    uint256 constant IC223y = 313014237529523386638180223314464020933397090620665075706414787922529351218;
    uint256 constant IC224x = 6585875562171250081068745714094331368750862050066524469320980407116743353201;
    uint256 constant IC224y = 18901932166380066380506207068310061008491598726047542146709083641942461613803;
    uint256 constant IC225x = 13315209159611088604844869475451789587867929398218211281814435843119404777409;
    uint256 constant IC225y = 16041979002517078023460002379955035898943376196963179635097769838761862040859;
    uint256 constant IC226x = 12474195104693164839207220174608373701575586075223536402151789189952282866118;
    uint256 constant IC226y = 1590743424956213144247043351202667647034873982402904869228446537666253266014;
    uint256 constant IC227x = 3486765590992149915853174233304446976410606700309917747449380199602845177327;
    uint256 constant IC227y = 15429481413012301463152154523184143687126202960072199527565693539440972346790;
    uint256 constant IC228x = 6810964317186231835836641277146377311781758158650886307028616010277702373701;
    uint256 constant IC228y = 3797095662857585873062238532988160608028028521228837827748330621808821602619;
    uint256 constant IC229x = 18919926798893042388410908194829460517896970393947730765819866135578668529389;
    uint256 constant IC229y = 2231323626714235158310501361275743501780723226805071217137547039567068474514;
    uint256 constant IC230x = 21126562396698095234121306217300742339321319868253656663825226569886124882686;
    uint256 constant IC230y = 3135753779944278082329324465545412251472292459204157090215771030293278479401;
    uint256 constant IC231x = 19605371653082859915695225098860915795376697518343482526125229001926866303663;
    uint256 constant IC231y = 18530420624268095801942196351895887895296907685213825124267039302870208176517;
    uint256 constant IC232x = 8305234874883625209032419216656393634683396844245897759252845833586756810527;
    uint256 constant IC232y = 13987781040486603903973073577050186213105300346295523104292870078917108217689;
    uint256 constant IC233x = 6312640708895668295766767792238330203894690698235288611402732901323720319300;
    uint256 constant IC233y = 12959569293007759655960052334968506318723218521664082179912650722269458558491;
    uint256 constant IC234x = 18759227182002132452584084832386124768940918660905657976271273412509720024308;
    uint256 constant IC234y = 1787162629009157107799924135888502387452344272189198656456562826860412866680;
    uint256 constant IC235x = 6787353816936348402667518178528514284635520994523210114631939093593776381568;
    uint256 constant IC235y = 14011697339764209736322571578648683721531707732069512561320590263868151092610;
    uint256 constant IC236x = 19124830526861332553297765166732611963448749657735199723427930467289810486324;
    uint256 constant IC236y = 12683614133975142386889135511203269390006487894989569995348091735430167205943;
    uint256 constant IC237x = 136542650958285785040136906502907049134811102907619296501624793288885091878;
    uint256 constant IC237y = 20022109336859657578110416115489561070878991317455023134524139190288672726598;
    uint256 constant IC238x = 11171026911024712270850633927875799445952233438690829502761738607288432542550;
    uint256 constant IC238y = 5194361821261073724130982742997740802955126602359929484998757745520093538699;
    uint256 constant IC239x = 20141312206651801951328834969346090433923403620141452796064271351183399981581;
    uint256 constant IC239y = 18858267877056743906655543595393930231491819057541251876427528086941048896984;
    uint256 constant IC240x = 778260218855496958689799695256474071620864498885523721561845197777406242455;
    uint256 constant IC240y = 2703991966316758214852103041860989028301899556590752991748491865924236919906;
    uint256 constant IC241x = 10491192812874663676781376379253669668000808863171809876485462673662177142775;
    uint256 constant IC241y = 5341944080359051680719950909415233589094184197317956576522994991396003979327;
    uint256 constant IC242x = 15487793396761751693356292453764422056388943979967406845877456316589661283016;
    uint256 constant IC242y = 12084683123148281251038349024356993778197257470800118945322383395844647765676;
    uint256 constant IC243x = 6698106773020048896902045261642183683433241851933520793319569067154597674732;
    uint256 constant IC243y = 20036278616613113439079243780080954507039876142102321257774930492273485570527;
    uint256 constant IC244x = 9881004940088946974921386341807724055407981510767586772510419082094466887703;
    uint256 constant IC244y = 13806360810084024964969371633086131730758956869300743598066494973746791571410;
    uint256 constant IC245x = 16680215831686882048146541327269616728400046738054285474465387910618960261065;
    uint256 constant IC245y = 20948251107686778977204423274872530919166950565696829488933368234465440041608;
    uint256 constant IC246x = 7278122555689544056363544375097944567383366983852929252832964533730186544955;
    uint256 constant IC246y = 4333778707526674064508203319672527785739380469045260131303092370810641731094;
    uint256 constant IC247x = 4621220957828592195775667858126267125042622662963036765039727207633202647516;
    uint256 constant IC247y = 20986075076519339741535578756496314372645619831822075593552983097321560252563;
    uint256 constant IC248x = 21195132008663451004773583206182545210689083276319719627398621555505204810725;
    uint256 constant IC248y = 4345143357797021553178851409722895268981521723689617621538546754777661744921;
    uint256 constant IC249x = 20522313936272353932190570048618702890309616965191685422644479631041286716152;
    uint256 constant IC249y = 13313958946953157130995833729978602474495451429980836724739779428910915648489;
    uint256 constant IC250x = 5980547113424612503033362195339836802760498697737005765082603991527117583383;
    uint256 constant IC250y = 10912996524842833256324678033890348765625421080097366645618607325183033583308;
    uint256 constant IC251x = 2751264124046331656814915479604474578288021215218717532108781475778193771023;
    uint256 constant IC251y = 10950283892355083968927537400510910872333401675732828938247312351884972081548;
    uint256 constant IC252x = 10934191005168673294272109069666770937657672234089043838525099381999301229186;
    uint256 constant IC252y = 9434444359239381271344587915264294242580113656906632961718990066472112702640;
    uint256 constant IC253x = 11960738868887879005635711074906835606654841228049427597701770686436924680756;
    uint256 constant IC253y = 4810420220306029190210910849855578441707173002154270178667360984263907607393;
    uint256 constant IC254x = 6457891134173670677355390718349224414356910807366823128788838371760599495725;
    uint256 constant IC254y = 18453483499087114191857103000432645954450373967549616018259941351540411705096;
    uint256 constant IC255x = 6410602813604229816527094097377024709877559375793719871033644142559325874572;
    uint256 constant IC255y = 2133906723453499933847018560840240536209062780851022280794592006710643264056;
    uint256 constant IC256x = 14920618393896470547621112416674524053423916382929327989130726159321630793201;
    uint256 constant IC256y = 15815417053469144753591268473325423916420832077918804496640049006270836383756;
    uint256 constant IC257x = 5134303258478968955076923733859269804589489498680389402873104134342594650466;
    uint256 constant IC257y = 11685059915960411893390893873048173790712065552833703734984377861355272790649;
    uint256 constant IC258x = 15843087425078416895041191739007486829585003366189344956685424119045233443496;
    uint256 constant IC258y = 687019716276671346867225040582439879945477061606360132029611721192738323126;
    uint256 constant IC259x = 18559795566441292143911266099180597102621051171627448250752892888984786815706;
    uint256 constant IC259y = 21797016554997429131784618938630828962984844033364329855741935650565635809190;
    uint256 constant IC260x = 8638230635924091188994912322347007714544018537121052356818284384983461586195;
    uint256 constant IC260y = 11104409622298036138814564944222389358436939203758833147533534958095827405536;
    uint256 constant IC261x = 10243804594510219465491036145606709427885959536254424884135858568467934584639;
    uint256 constant IC261y = 2731622913921004958217328451867813538269421704923679054645018807855955734745;
    uint256 constant IC262x = 13407183257913363785302898484728957525947166005063721279700293156182809225796;
    uint256 constant IC262y = 19587161773561289053967340889767660090427934109782292923237291037863267970124;
    uint256 constant IC263x = 12855161700089302235248434228367168088838877607999076822074483476325110460731;
    uint256 constant IC263y = 21578275965217898455080310760866015787135385438565071816979588419076913982840;
    uint256 constant IC264x = 3867234793622107714063995773035276310583692964098732924806899815121053864052;
    uint256 constant IC264y = 17155756885600765417823815773364233822965586541081225374774465702298645207978;
    uint256 constant IC265x = 15442995734588959597615283791417294372612240574442188942503200061446835220775;
    uint256 constant IC265y = 3053322809267621076299142854745180891667355749265634795426341261705231296279;
    uint256 constant IC266x = 14182030570883414082609493048686682942048008119368687852482218516656069485974;
    uint256 constant IC266y = 2548326821755320283136099015617413265781125982469233745688531333029624397978;
    uint256 constant IC267x = 4789998572379498615371435027919049187558935206148519144950040425179311345384;
    uint256 constant IC267y = 19350198259966855562310320321176772587464668635513964719540442914425591999366;
    uint256 constant IC268x = 12177825720651976979775283425970287970155079624101602063447902608142665075449;
    uint256 constant IC268y = 1193660491206343877516317617513724818571150103489464870043574951940237495055;
    uint256 constant IC269x = 2487668960095787908831000124849405327207606441472811379781662756922475773416;
    uint256 constant IC269y = 8647316862846028205402510697905314487730250344531342113930193557682270456382;
    uint256 constant IC270x = 10713364615411322587602847682927157587107346062618148363192188123329767720869;
    uint256 constant IC270y = 2626405388791490881746928220262916634932327378543979065598807269676917087581;
    uint256 constant IC271x = 20638560578257925857262471991060107734716607942838675145215473358746071684791;
    uint256 constant IC271y = 5256122756782344337131430631699656256677182762300688743050876732983884102297;
    uint256 constant IC272x = 6404754848806778697154708832921588336549437217589291721950516056522676404225;
    uint256 constant IC272y = 17569502866333403779515032844889393099738716096594679784785605621125451240229;
    uint256 constant IC273x = 1281463839996986066409244906966448926227248091818859912005759360646961993305;
    uint256 constant IC273y = 12542227917681001120114619429960779630447172514943906246414707020058055424134;
    uint256 constant IC274x = 11517094767179309043783027305128200440254072041311269408408314314024110204672;
    uint256 constant IC274y = 10224080282442466344387435220005837375095119777845394357575991026401850651698;
    uint256 constant IC275x = 16568910051367665276808634946886287358036936260162430687517288969535857634949;
    uint256 constant IC275y = 12196613675200186149823916582696078343757812837451141253610827463114429481144;
    uint256 constant IC276x = 507693538787618454601418720340345631684589923889788782117002055743707727175;
    uint256 constant IC276y = 11274113250111655449554607055346777128354634158685839352971211317157259847199;
    uint256 constant IC277x = 6209166829971298202505942205889083917262827296453230892683916890197094613264;
    uint256 constant IC277y = 9562915165552209162852278530549592957851481250687402553906413910279608764924;
    uint256 constant IC278x = 12865982560864885171483320822425663100239269028040342019927657293901982199001;
    uint256 constant IC278y = 10956568927324492417186107926990346736761930431142701213591654938578206585578;
    uint256 constant IC279x = 18087114183168486850239399721350285599689762370666256708482913535904538214733;
    uint256 constant IC279y = 18985148034450183584931411753696148069231847857621918188531513128433449287647;
    uint256 constant IC280x = 13465491020539076190264237587955165851125494430882646049003912866291843230467;
    uint256 constant IC280y = 19078626708292172947852150846620601739015926798431024420214342839776724493360;
    uint256 constant IC281x = 1128372503957766330314516749691346302429346806694918184136884956461948198104;
    uint256 constant IC281y = 21721977399153627121859353715874449865693526103478283684866556103192802721766;
    uint256 constant IC282x = 19105848113309627759623279092799620712211414950607288404215962563533928053785;
    uint256 constant IC282y = 6803968602143943350640612137467639247864425704565577018538727706799353410724;
    uint256 constant IC283x = 18311263051905325913043474727884941006073623619462848869342844977233536174637;
    uint256 constant IC283y = 4537309725344593605924997795030495170361888890397774613580600477674030678850;
    uint256 constant IC284x = 544021923254252350081256512404122943001184350148923391993604852540121076411;
    uint256 constant IC284y = 18520563795161695400223030831501379921202101728658088895177495729152108997221;
    uint256 constant IC285x = 7755028765657389795444447312225071994304916851398742023392013222516225362271;
    uint256 constant IC285y = 10713902559518464343362838310311976340545947247540380988341104558823939933387;

    function getICCount() external pure returns (uint256) {
        return 90;
    }

    function getIC(uint256 index) public pure returns (uint256 x, uint256 y) {
        require(index < 90, "Index out of range");

        if (index == 0) return (IC196x, IC196y);
        if (index == 1) return (IC197x, IC197y);
        if (index == 2) return (IC198x, IC198y);
        if (index == 3) return (IC199x, IC199y);
        if (index == 4) return (IC200x, IC200y);
        if (index == 5) return (IC201x, IC201y);
        if (index == 6) return (IC202x, IC202y);
        if (index == 7) return (IC203x, IC203y);
        if (index == 8) return (IC204x, IC204y);
        if (index == 9) return (IC205x, IC205y);
        if (index == 10) return (IC206x, IC206y);
        if (index == 11) return (IC207x, IC207y);
        if (index == 12) return (IC208x, IC208y);
        if (index == 13) return (IC209x, IC209y);
        if (index == 14) return (IC210x, IC210y);
        if (index == 15) return (IC211x, IC211y);
        if (index == 16) return (IC212x, IC212y);
        if (index == 17) return (IC213x, IC213y);
        if (index == 18) return (IC214x, IC214y);
        if (index == 19) return (IC215x, IC215y);
        if (index == 20) return (IC216x, IC216y);
        if (index == 21) return (IC217x, IC217y);
        if (index == 22) return (IC218x, IC218y);
        if (index == 23) return (IC219x, IC219y);
        if (index == 24) return (IC220x, IC220y);
        if (index == 25) return (IC221x, IC221y);
        if (index == 26) return (IC222x, IC222y);
        if (index == 27) return (IC223x, IC223y);
        if (index == 28) return (IC224x, IC224y);
        if (index == 29) return (IC225x, IC225y);
        if (index == 30) return (IC226x, IC226y);
        if (index == 31) return (IC227x, IC227y);
        if (index == 32) return (IC228x, IC228y);
        if (index == 33) return (IC229x, IC229y);
        if (index == 34) return (IC230x, IC230y);
        if (index == 35) return (IC231x, IC231y);
        if (index == 36) return (IC232x, IC232y);
        if (index == 37) return (IC233x, IC233y);
        if (index == 38) return (IC234x, IC234y);
        if (index == 39) return (IC235x, IC235y);
        if (index == 40) return (IC236x, IC236y);
        if (index == 41) return (IC237x, IC237y);
        if (index == 42) return (IC238x, IC238y);
        if (index == 43) return (IC239x, IC239y);
        if (index == 44) return (IC240x, IC240y);
        if (index == 45) return (IC241x, IC241y);
        if (index == 46) return (IC242x, IC242y);
        if (index == 47) return (IC243x, IC243y);
        if (index == 48) return (IC244x, IC244y);
        if (index == 49) return (IC245x, IC245y);
        if (index == 50) return (IC246x, IC246y);
        if (index == 51) return (IC247x, IC247y);
        if (index == 52) return (IC248x, IC248y);
        if (index == 53) return (IC249x, IC249y);
        if (index == 54) return (IC250x, IC250y);
        if (index == 55) return (IC251x, IC251y);
        if (index == 56) return (IC252x, IC252y);
        if (index == 57) return (IC253x, IC253y);
        if (index == 58) return (IC254x, IC254y);
        if (index == 59) return (IC255x, IC255y);
        if (index == 60) return (IC256x, IC256y);
        if (index == 61) return (IC257x, IC257y);
        if (index == 62) return (IC258x, IC258y);
        if (index == 63) return (IC259x, IC259y);
        if (index == 64) return (IC260x, IC260y);
        if (index == 65) return (IC261x, IC261y);
        if (index == 66) return (IC262x, IC262y);
        if (index == 67) return (IC263x, IC263y);
        if (index == 68) return (IC264x, IC264y);
        if (index == 69) return (IC265x, IC265y);
        if (index == 70) return (IC266x, IC266y);
        if (index == 71) return (IC267x, IC267y);
        if (index == 72) return (IC268x, IC268y);
        if (index == 73) return (IC269x, IC269y);
        if (index == 74) return (IC270x, IC270y);
        if (index == 75) return (IC271x, IC271y);
        if (index == 76) return (IC272x, IC272y);
        if (index == 77) return (IC273x, IC273y);
        if (index == 78) return (IC274x, IC274y);
        if (index == 79) return (IC275x, IC275y);
        if (index == 80) return (IC276x, IC276y);
        if (index == 81) return (IC277x, IC277y);
        if (index == 82) return (IC278x, IC278y);
        if (index == 83) return (IC279x, IC279y);
        if (index == 84) return (IC280x, IC280y);
        if (index == 85) return (IC281x, IC281y);
        if (index == 86) return (IC282x, IC282y);
        if (index == 87) return (IC283x, IC283y);
        if (index == 88) return (IC284x, IC284y);
        if (index == 89) return (IC285x, IC285y);

        revert("Invalid index");
    }

    // Batch getter for gas optimization
    function getBatchIC(uint256 startIdx, uint256 count)
        external pure returns (uint256[] memory xs, uint256[] memory ys) {
        require(startIdx + count <= 90, "Batch out of range");

        xs = new uint256[](count);
        ys = new uint256[](count);

        for (uint256 i = 0; i < count; i++) {
            (xs[i], ys[i]) = getIC(startIdx + i);
        }
    }
}