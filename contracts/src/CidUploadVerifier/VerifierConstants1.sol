// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

interface IVerifierConstants {
    function getIC(uint256 index) external pure returns (uint256 x, uint256 y);
    function getICCount() external pure returns (uint256);
}

contract VerifierConstants1 is IVerifierConstants {
    uint256 constant IC0x = 20613560856891735858107080143430420066809959697846792408542702417451071140763;
    uint256 constant IC0y = 3411292424802799579610787758592677601657755615342110716634816357644950269861;
    uint256 constant IC1x = 12084938658666178284432732236038629529798970147443427015843651602025595707299;
    uint256 constant IC1y = 6119879400979413227630648454670568447792288571829591763036376181394544391511;
    uint256 constant IC2x = 17119763248966374136170342879695434813906300112556755634209890075413831245720;
    uint256 constant IC2y = 8963487599289627450969907512234096529785379796155351755614053300282483436816;
    uint256 constant IC3x = 16278609697680969961602729427422337481059742113263689531889070137874410329814;
    uint256 constant IC3y = 3070710828819813045030789490032946419643633027910990985569150906290459834468;
    uint256 constant IC4x = 781632668180014489064644242559611103328181913514022879466170888206718793795;
    uint256 constant IC4y = 5280607659525446913029880858942472946284377387314657667905509438991473186525;
    uint256 constant IC5x = 7616700052296207300270864828922235289010441156084183365658440059134364853677;
    uint256 constant IC5y = 9097250580941022748940369021707670953280965024226679585464043768763693135919;
    uint256 constant IC6x = 7898910119017876403096884481571116345160726749281821365833477690927833466173;
    uint256 constant IC6y = 21517066896304903026378720981944029633313817468033056437642136402088596571492;
    uint256 constant IC7x = 13777608380643142503714807581072108481184870967906144026038770005863228735918;
    uint256 constant IC7y = 8701415781180842195282719637953353173769589009551239430578965119601411056467;
    uint256 constant IC8x = 10646996900973696353244052851139287661877865003616218780717485642822503876099;
    uint256 constant IC8y = 15032027998510875736917065651324730363277814257055834924006965412738668487401;
    uint256 constant IC9x = 17807184542508928338272709467335773251479092451241899614872274744683277017633;
    uint256 constant IC9y = 13050789231915863835543467510881764240408270058578516000342411801211706541359;
    uint256 constant IC10x = 13809992696421706819631782279074112533358207720101305658420944192206314665034;
    uint256 constant IC10y = 3442679056114512590228938135194564176887973410552357790213267277053087307626;
    uint256 constant IC11x = 19879820125283106255020155878921429269197837415021937708026045507228884288824;
    uint256 constant IC11y = 7722044806819859000628787391663611067835575452508145827237379335022620557807;
    uint256 constant IC12x = 64714517271249568095994846265529906498028111330568193700069408871870249475;
    uint256 constant IC12y = 1465056259304920763856346649967852069323419427078210744225771772563593040798;
    uint256 constant IC13x = 12395972731057201328047620336720821400502308771726327889376887990365352727513;
    uint256 constant IC13y = 12286602362510667370983631436837035717978868841772758400087798462630103348614;
    uint256 constant IC14x = 7770103501131453332759836101264104165930821431441529952685759227683399097162;
    uint256 constant IC14y = 2968456891856704971740712874038099194220366176554679491272881853970085290086;
    uint256 constant IC15x = 1289425228600654841220706662212324003898537076478532667826720527872180895104;
    uint256 constant IC15y = 21788354846158219338520754483561376129651572739151484337117484798471864157010;
    uint256 constant IC16x = 616351088525793780167000253167314635993208463392398549248130574565247748569;
    uint256 constant IC16y = 19555051265429055308767521986673881597932160990480946787353093662686750397813;
    uint256 constant IC17x = 9767939890559242704744539005999511238151932077832565255893636313612575739187;
    uint256 constant IC17y = 19671614443625446819425942083287543142451633809500931962119637255096106394132;
    uint256 constant IC18x = 14427855464424503455621085793477717164548444294277006641196319430999809242334;
    uint256 constant IC18y = 9129649126627848301600544877847356848172656969089383311235959252081691168016;
    uint256 constant IC19x = 12384810987267564366966960971362383185705749567622384427460226880546964837840;
    uint256 constant IC19y = 5471550197440147328943387279562583363875545278846542128653431519937616661118;
    uint256 constant IC20x = 11130934941011210661299914534890293220544666684383491026642907902820506999398;
    uint256 constant IC20y = 5416287104324390770581103195273085455507683709973684983579689330445455168040;
    uint256 constant IC21x = 18604862178059391236990441300516335603598658510310066015164488370939185218367;
    uint256 constant IC21y = 12640873096356118248545039920812877950932428576485636451350622213336667062180;
    uint256 constant IC22x = 19826814278429740713355326675571770145242830689802350068777592942399145362439;
    uint256 constant IC22y = 8463064857338071049371815780159033996617480700135463592789396497997357939987;
    uint256 constant IC23x = 12866629537775865409718094661880105475513130702183733763779611216829984921612;
    uint256 constant IC23y = 19917110459400068967794231984117834408954778898799897797129954865891906196035;
    uint256 constant IC24x = 8863534255990780980826288131347102024491371160825325873239751327967412779446;
    uint256 constant IC24y = 15029402220944807522343331085619954807153667821337816355638534232083430804424;
    uint256 constant IC25x = 2785479652349427377425573700396364326307019386771654030665859196810436358175;
    uint256 constant IC25y = 2165994739378609729914856608451179349645640495380713002595887514244496639068;
    uint256 constant IC26x = 4098294545398521444364766775104757567056612637553289379401000009387152847898;
    uint256 constant IC26y = 9381247624238358214972044171696453135493784328758209349202704346730593755048;
    uint256 constant IC27x = 19927324954480980657686823011303880638632204392850642897415660767585345014251;
    uint256 constant IC27y = 2619988938357469620700630498304681788728127126643317173408455994685368785585;
    uint256 constant IC28x = 19315374132808176827615352490189521545360781041092885767497854538880107178056;
    uint256 constant IC28y = 17198123538824118905610444574147817294962124339454276402978751030635963941013;
    uint256 constant IC29x = 12689050689741388644663135381791621822475634795513257449375861713086568536793;
    uint256 constant IC29y = 169923011364319991466198734041760903122382749997204503413767663159512688327;
    uint256 constant IC30x = 4480774975457959729389027570490658411418642224249255309229289571426260577249;
    uint256 constant IC30y = 15550790305960294678265797324205280330855356689693169662559359678236427585961;
    uint256 constant IC31x = 909115941401753508114728785416707746295661253015131881225539176334356768758;
    uint256 constant IC31y = 11042844264945901158414683181959567800268370438065879634298568565624524204759;
    uint256 constant IC32x = 17428264430677664494842863406075588329503152839573973060676668661042966303343;
    uint256 constant IC32y = 12611856284781146592400653559788070757418558188248119313504462175516162216733;
    uint256 constant IC33x = 15622386205133839045455803602491589021645150477634466178240275637597657127586;
    uint256 constant IC33y = 17292542000341699254684818087449581991417890011076665246615498869924719713372;
    uint256 constant IC34x = 3193709712729703025332494691762459660566359825461637518712396660737614498577;
    uint256 constant IC34y = 7502402762987702372487582996781239857316644674244476233652877464572320316936;
    uint256 constant IC35x = 15291123919190857695175559663006080949957855823413699999043992317906320244794;
    uint256 constant IC35y = 11768816957648506979686126727093807009058233936072602759544579026092367390726;
    uint256 constant IC36x = 2802983270146715054567293662708451901258702553939909295574446088873232318578;
    uint256 constant IC36y = 13580858701324608598539909972736679822872878417173146653584213200571848100316;
    uint256 constant IC37x = 20403012212261541445380438634098305786668401923016720539233551118283553492063;
    uint256 constant IC37y = 7380140247965935693964460055375274663885984256546894835271926246437981339756;
    uint256 constant IC38x = 7098156392820141708700715591247496755162025548843165635710441702183835832766;
    uint256 constant IC38y = 5923949080061212441318097698481276846886192276789558129367356135512468536924;
    uint256 constant IC39x = 18709011052759906116958021496929940781101646311025291004490401702969714892381;
    uint256 constant IC39y = 1245546263487714406841242223636609828101764334406956421998869070357407873643;
    uint256 constant IC40x = 14517452768767262919818457970600146473733493068876585375251323284272805080770;
    uint256 constant IC40y = 13691118567732091450950907670434172059135344730480128930995060660121371445581;
    uint256 constant IC41x = 17613652993271270165385467850159033061028483862107633387733302116375781579293;
    uint256 constant IC41y = 9447219751340673360755996459956836824662122146582338953948097259369905726906;
    uint256 constant IC42x = 7043730448345252700158168378834184604687159130591721429984724879663975691918;
    uint256 constant IC42y = 8418859049867205991184918982770607901634386659736890004216842249028051507652;
    uint256 constant IC43x = 4543862244801845935551602612996345234468273183903675551690765434731096731452;
    uint256 constant IC43y = 11616516077336037526320038488262872013707730614216572187813315985914305829102;
    uint256 constant IC44x = 19971479447837187525099368138242707494319501440893863457977735644472467514084;
    uint256 constant IC44y = 4861025591969532351554638228295973094513245159735959083873712113819110342432;
    uint256 constant IC45x = 7228572014199042614770209749737079303560973510854307417754294002948455278486;
    uint256 constant IC45y = 1479351061656091417193737052511560343466811625748562434411291052536736873214;
    uint256 constant IC46x = 9195689142398381504100620790898339806196620509776531853685118946257879398175;
    uint256 constant IC46y = 12258452702049223136329182408217024257549077694129498338741626583386808134862;
    uint256 constant IC47x = 4341883274579052588338958344721879500811350343220029308561286882718460765563;
    uint256 constant IC47y = 20870556424355785902178643168264609578255662481143619315236137496235057068551;
    uint256 constant IC48x = 2954756928970776762226655961486588731628743950239398820753887096197520140792;
    uint256 constant IC48y = 15566161093343675861654076989615455031238325637426866158826657516088334661972;
    uint256 constant IC49x = 13619425375712175802558192300458508957433200149630633585798196902866245618142;
    uint256 constant IC49y = 15597590258201114848495130514059365152277659779365326064232834835057345201954;
    uint256 constant IC50x = 18660959440399408844624816883686463870872951402328762371687485562328094174495;
    uint256 constant IC50y = 17317749117812068151553381616280154524237945153930878183839214911584047022147;
    uint256 constant IC51x = 6831989707452909159665262765868898340013512087394227279125361089338814848442;
    uint256 constant IC51y = 11216879283402997449068740933261110278753142806759033096948791574903742037749;
    uint256 constant IC52x = 604121094364643818874158325619657367004121641381292052830928722887542530712;
    uint256 constant IC52y = 4808154716104811819182000844859067208277136876845737768479870983044051198863;
    uint256 constant IC53x = 13303955602153883859849804626554175784872065610333435783169446749544686850297;
    uint256 constant IC53y = 5874113052939581492511848191553144734781464835281584450329650501390061384725;
    uint256 constant IC54x = 9857048945602719755110933988891686722416401264415455920390393790118628388683;
    uint256 constant IC54y = 16939664305104645972638384529832334034442013927151036176401006821782794680514;
    uint256 constant IC55x = 2098832798112623178226165833532471639091173918337453104228988765886456450752;
    uint256 constant IC55y = 3435993478571830837743100845552698110825044999313847332499453174218856616379;
    uint256 constant IC56x = 11559894135070306507158565272756278679873038672656455043395422935168500799937;
    uint256 constant IC56y = 6267035880529862371551710853848360265250189507862598048316565990315032895513;
    uint256 constant IC57x = 3215701833933013073645287430859382147464291027541658327947613814084268019151;
    uint256 constant IC57y = 19274570955385823804893025911840075723094586146825652429574383188500865992228;
    uint256 constant IC58x = 15917159753836173119405726791594574530895261960709467357741388287624476330582;
    uint256 constant IC58y = 13070224606023161748490237568081157266588858086548092675784285994011550475286;
    uint256 constant IC59x = 15120064126130867430054161925438021395411652582713477007320302759383388365603;
    uint256 constant IC59y = 18235976047624845275091368833490883826482936082654729436065227002987594939382;
    uint256 constant IC60x = 4378932620441692127178959842207283889128388345141848203271744967021065764330;
    uint256 constant IC60y = 1796263793644266114169209882078020135767947442557043287961980922372594009930;
    uint256 constant IC61x = 8989248823756067432625396702553572662866194504926225814469867843619943663224;
    uint256 constant IC61y = 34369857365283002397661284005031786741913255492905441512578234722790558198;
    uint256 constant IC62x = 12814540049930326805808137113510957604289126038957414301862929469872657660877;
    uint256 constant IC62y = 3224082721148057649545086399427201486813538627833929601882283751079574062926;
    uint256 constant IC63x = 16088025852095137070082306115045341083022325043373580549646228106256358666396;
    uint256 constant IC63y = 14483423173742289966253092826914185502564291713534435226234454416877245832412;
    uint256 constant IC64x = 5492591041631616494540799854857358663393757173359118180984771435100227626973;
    uint256 constant IC64y = 16026966508083413025414808454064628041223798601702988715529702635582024677383;
    uint256 constant IC65x = 5548032608608423437138500883616829806867590350354700329128637888423526656881;
    uint256 constant IC65y = 13540878890287386403263635267154457654405677207702405720632318711679743006500;
    uint256 constant IC66x = 18836456713290394436682805826213657051841223566301273521932391208790898181819;
    uint256 constant IC66y = 876091101613041101690631493448137692497547051967850530174964168345640962908;
    uint256 constant IC67x = 6787567338548044613194648839446139175442879048803942369181637880956638490016;
    uint256 constant IC67y = 17973513779648042383861085212018525677331569269530982878942300217788631505028;
    uint256 constant IC68x = 12915702821466553188738657230990254116671893078198793698329102338979817329255;
    uint256 constant IC68y = 13017059342324996560635227684290211422023793829335756970386884313400843927427;
    uint256 constant IC69x = 7309619466561935216598268248312510997391868758038994361740392712932683244080;
    uint256 constant IC69y = 2073735991416944233380141349611445803186038914694812051241083475296861141640;
    uint256 constant IC70x = 19344844164822546055677517791458031877964998722934035370620376734937227193873;
    uint256 constant IC70y = 15405207727784559112333429813960376821652179260419062941068277774243721923999;
    uint256 constant IC71x = 7597357807072884674069447330765390748376738271810359218631673927169818824752;
    uint256 constant IC71y = 10567827348076749540915368638183156974570682523838011436576364860642365321452;
    uint256 constant IC72x = 15168003007803419002267882815637723211467641472633541109261365776906621832423;
    uint256 constant IC72y = 7098957509596152930450739907590618559735915935265715470208255859863979133981;
    uint256 constant IC73x = 5883169991001131548967567537300299454964789053860551178438933264972251565550;
    uint256 constant IC73y = 2759792967648190582946393110314627866665399271144882675718027996188146888138;
    uint256 constant IC74x = 3992776581666386590061249756178496114959677895488316042560950904749641515615;
    uint256 constant IC74y = 18100720661032819841144143615596633863701583500793665029887194433811680608826;
    uint256 constant IC75x = 13470014417995015403598185439463113977185662696131853274970891483871490579007;
    uint256 constant IC75y = 5544558149987503470603890387557233895032062958930995886852339110308548873344;
    uint256 constant IC76x = 3487275475524492611485692188393153002585748812391437912689973452432607968229;
    uint256 constant IC76y = 2804410343891554710551263879199649593959070270965175333030210913436407921651;
    uint256 constant IC77x = 8992098663590340619038647894738549188593544555009977268779698589073062278530;
    uint256 constant IC77y = 11471570876267148468821836429131302346621270404423589545117676973317700159910;
    uint256 constant IC78x = 7561751400351851186046557978240201329089556305721280604132475858745648267336;
    uint256 constant IC78y = 10711646194398524066881099953231024706104127177842679365737043238942172874827;
    uint256 constant IC79x = 908274358712200536409271531942743809507324362486171527249083950362919905634;
    uint256 constant IC79y = 9211832479898076231406834677713653720346997755094163648970952116806946409108;
    uint256 constant IC80x = 18503297754275044865769344373794080895768098780165932820500735418077883959320;
    uint256 constant IC80y = 11576372018278140254004270845373757781856081512710765639727308516739538379749;
    uint256 constant IC81x = 13188180512198921365253402812545271847173643265261821940528828593414997277125;
    uint256 constant IC81y = 7097958721852448419678600898391840380188804334116112549014358717414197066070;
    uint256 constant IC82x = 1259802198841278797873323814051950686805930241820379788663406241882454166850;
    uint256 constant IC82y = 815063483411787137228103231140073084332460085894346894921928992623993367269;
    uint256 constant IC83x = 5294938225238012880600701062389824400971297940202207326795080334842091496597;
    uint256 constant IC83y = 10046418405503043343493290740069692916472996838110082874288536798385280812346;
    uint256 constant IC84x = 13109513330514827528719569025510637556509910777090675511251640576457705014502;
    uint256 constant IC84y = 17696819395919915238641716579325088570079240180465830718165753021396446993039;
    uint256 constant IC85x = 21438982961415398168164455268192428522338192603574388524426139575360343266084;
    uint256 constant IC85y = 867227188807097511022901014097337713671868996791138279646494686705447452703;
    uint256 constant IC86x = 540603845037040382365496690344288398093912450550828102604963074204235041117;
    uint256 constant IC86y = 19024702887797900597641431665025196436063887535974062830158838961760371873468;
    uint256 constant IC87x = 12581801211525663710403411436254574420664641442843467492568833014434843569059;
    uint256 constant IC87y = 9820787999526714690402615436895032588677206192415520542541138775720708476410;
    uint256 constant IC88x = 4220014210838224121350173268329117769211656334328025737983401449212565505532;
    uint256 constant IC88y = 5581412643582383588393727429877177232172802694319663136203543180042487375344;
    uint256 constant IC89x = 10907141264526525902207067052161842141634666178767227853639546897590346680138;
    uint256 constant IC89y = 9212527382632393508692136521410922345075106368119058041087313272998685039970;
    uint256 constant IC90x = 21324341966660028572646255682589064342328443992546193657091005587616574156799;
    uint256 constant IC90y = 9863905392040383079745214899373259999099772412169083181883096278318199074269;
    uint256 constant IC91x = 9892106469835122633118301725529939298920797059405125634038465376800520048512;
    uint256 constant IC91y = 5864423023112294879230421816488349336830488204189600092243491353985918722604;
    uint256 constant IC92x = 17424309055817805804194840673301237972509399587129547288139440388225277982385;
    uint256 constant IC92y = 1329089761870382079676235609078744176291997871822936144198574974954238524158;
    uint256 constant IC93x = 8919208901859185003141869891024621659965048604269051251764370328647039444768;
    uint256 constant IC93y = 11468831270052235498963006564145957245131338365766042854107065431602233859238;
    uint256 constant IC94x = 10028388483468046081330667426696704905424056023992449631185697254918117360405;
    uint256 constant IC94y = 10657128695304884724805103617194884732289887310057260400350605146765247377606;
    uint256 constant IC95x = 16690949603391728890213131819070676299026485565712076350318250949986482717604;
    uint256 constant IC95y = 4648538032284381863492846503769944024221754207156855470087437891833899562745;
    uint256 constant IC96x = 13135838347400607904435553120357875343742487218363822606538662607047420289051;
    uint256 constant IC96y = 14842806949405860550256713633423754824723896278625350134702784380404869944345;
    uint256 constant IC97x = 3025590405068002069494105613672443989790912820259912446238766074003143043661;
    uint256 constant IC97y = 12180872052923612184440174169839733415461732615565212813240745151493144041917;

    function getICCount() external pure returns (uint256) {
        return 98;
    }

    function getIC(uint256 index) public pure returns (uint256 x, uint256 y) {
        require(index < 98, "Index out of range");

        if (index == 0) return (IC0x, IC0y);
        if (index == 1) return (IC1x, IC1y);
        if (index == 2) return (IC2x, IC2y);
        if (index == 3) return (IC3x, IC3y);
        if (index == 4) return (IC4x, IC4y);
        if (index == 5) return (IC5x, IC5y);
        if (index == 6) return (IC6x, IC6y);
        if (index == 7) return (IC7x, IC7y);
        if (index == 8) return (IC8x, IC8y);
        if (index == 9) return (IC9x, IC9y);
        if (index == 10) return (IC10x, IC10y);
        if (index == 11) return (IC11x, IC11y);
        if (index == 12) return (IC12x, IC12y);
        if (index == 13) return (IC13x, IC13y);
        if (index == 14) return (IC14x, IC14y);
        if (index == 15) return (IC15x, IC15y);
        if (index == 16) return (IC16x, IC16y);
        if (index == 17) return (IC17x, IC17y);
        if (index == 18) return (IC18x, IC18y);
        if (index == 19) return (IC19x, IC19y);
        if (index == 20) return (IC20x, IC20y);
        if (index == 21) return (IC21x, IC21y);
        if (index == 22) return (IC22x, IC22y);
        if (index == 23) return (IC23x, IC23y);
        if (index == 24) return (IC24x, IC24y);
        if (index == 25) return (IC25x, IC25y);
        if (index == 26) return (IC26x, IC26y);
        if (index == 27) return (IC27x, IC27y);
        if (index == 28) return (IC28x, IC28y);
        if (index == 29) return (IC29x, IC29y);
        if (index == 30) return (IC30x, IC30y);
        if (index == 31) return (IC31x, IC31y);
        if (index == 32) return (IC32x, IC32y);
        if (index == 33) return (IC33x, IC33y);
        if (index == 34) return (IC34x, IC34y);
        if (index == 35) return (IC35x, IC35y);
        if (index == 36) return (IC36x, IC36y);
        if (index == 37) return (IC37x, IC37y);
        if (index == 38) return (IC38x, IC38y);
        if (index == 39) return (IC39x, IC39y);
        if (index == 40) return (IC40x, IC40y);
        if (index == 41) return (IC41x, IC41y);
        if (index == 42) return (IC42x, IC42y);
        if (index == 43) return (IC43x, IC43y);
        if (index == 44) return (IC44x, IC44y);
        if (index == 45) return (IC45x, IC45y);
        if (index == 46) return (IC46x, IC46y);
        if (index == 47) return (IC47x, IC47y);
        if (index == 48) return (IC48x, IC48y);
        if (index == 49) return (IC49x, IC49y);
        if (index == 50) return (IC50x, IC50y);
        if (index == 51) return (IC51x, IC51y);
        if (index == 52) return (IC52x, IC52y);
        if (index == 53) return (IC53x, IC53y);
        if (index == 54) return (IC54x, IC54y);
        if (index == 55) return (IC55x, IC55y);
        if (index == 56) return (IC56x, IC56y);
        if (index == 57) return (IC57x, IC57y);
        if (index == 58) return (IC58x, IC58y);
        if (index == 59) return (IC59x, IC59y);
        if (index == 60) return (IC60x, IC60y);
        if (index == 61) return (IC61x, IC61y);
        if (index == 62) return (IC62x, IC62y);
        if (index == 63) return (IC63x, IC63y);
        if (index == 64) return (IC64x, IC64y);
        if (index == 65) return (IC65x, IC65y);
        if (index == 66) return (IC66x, IC66y);
        if (index == 67) return (IC67x, IC67y);
        if (index == 68) return (IC68x, IC68y);
        if (index == 69) return (IC69x, IC69y);
        if (index == 70) return (IC70x, IC70y);
        if (index == 71) return (IC71x, IC71y);
        if (index == 72) return (IC72x, IC72y);
        if (index == 73) return (IC73x, IC73y);
        if (index == 74) return (IC74x, IC74y);
        if (index == 75) return (IC75x, IC75y);
        if (index == 76) return (IC76x, IC76y);
        if (index == 77) return (IC77x, IC77y);
        if (index == 78) return (IC78x, IC78y);
        if (index == 79) return (IC79x, IC79y);
        if (index == 80) return (IC80x, IC80y);
        if (index == 81) return (IC81x, IC81y);
        if (index == 82) return (IC82x, IC82y);
        if (index == 83) return (IC83x, IC83y);
        if (index == 84) return (IC84x, IC84y);
        if (index == 85) return (IC85x, IC85y);
        if (index == 86) return (IC86x, IC86y);
        if (index == 87) return (IC87x, IC87y);
        if (index == 88) return (IC88x, IC88y);
        if (index == 89) return (IC89x, IC89y);
        if (index == 90) return (IC90x, IC90y);
        if (index == 91) return (IC91x, IC91y);
        if (index == 92) return (IC92x, IC92y);
        if (index == 93) return (IC93x, IC93y);
        if (index == 94) return (IC94x, IC94y);
        if (index == 95) return (IC95x, IC95y);
        if (index == 96) return (IC96x, IC96y);
        if (index == 97) return (IC97x, IC97y);

        revert("Invalid index");
    }

    // Batch getter for gas optimization
    function getBatchIC(uint256 startIdx, uint256 count)
        external pure returns (uint256[] memory xs, uint256[] memory ys) {
        require(startIdx + count <= 98, "Batch out of range");

        xs = new uint256[](count);
        ys = new uint256[](count);

        for (uint256 i = 0; i < count; i++) {
            (xs[i], ys[i]) = getIC(startIdx + i);
        }
    }
}