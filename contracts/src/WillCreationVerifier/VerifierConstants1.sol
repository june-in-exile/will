// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

interface IVerifierConstants {
    function getIC(uint256 index) external pure returns (uint256 x, uint256 y);
    function getICCount() external pure returns (uint256);
}

contract VerifierConstants1 is IVerifierConstants {
    uint256 constant IC0x = 15896350712410661995489896609775099962041579024604452290973084000740600722373;
    uint256 constant IC0y = 1392674064755996927770870762452202945904829176451604197957652770843219931776;
    uint256 constant IC1x = 5458684383173019652680838348271592296989521719924004648559894280476217675985;
    uint256 constant IC1y = 3854265464519749655609237190418800778994425085688586555810313537893629839972;
    uint256 constant IC2x = 634220463359269678444007341531460555503333574351382186323940589653489993584;
    uint256 constant IC2y = 13516159764329998090879843665143933098769055816196653975753342980566813343142;
    uint256 constant IC3x = 21250516023676483061555009235402836396497075619773504003508088802975907660916;
    uint256 constant IC3y = 9313729387815761760064755354910761060438966679659431718106088490807226389213;
    uint256 constant IC4x = 15111661738796733982200909898175129319813247455667618445185456624909181356716;
    uint256 constant IC4y = 6698826855642873602512758003903593880781009401754945093585624666222556492133;
    uint256 constant IC5x = 10279263919847462504909644336404751047080463523414724110949992760095248690703;
    uint256 constant IC5y = 12677717922765429510419043431591330345900289760712679152013547450055632422511;
    uint256 constant IC6x = 9389133429238275044112086473274550221184719615500469873303052877919617000880;
    uint256 constant IC6y = 13867107756867926686317966829468719592686878814995330077275710290177292856202;
    uint256 constant IC7x = 2938289434392443405874663118314807162151218361593527027469681325373035773620;
    uint256 constant IC7y = 17175973703128173808900474461774975067245977179371649632409337178762769412790;
    uint256 constant IC8x = 10774970485925593717372042674853330466966785138455887683014738720560604260109;
    uint256 constant IC8y = 9787209594184705531501620100112651992946658953504364525158440708811694684646;
    uint256 constant IC9x = 8578823081566265163144847738087573530293147995894326756567672467234214412408;
    uint256 constant IC9y = 13343427138114564039970678513821816756606198515429716388085377167372580397647;
    uint256 constant IC10x = 7231506732363456634656566795806761780507972667026781677465143920124214961765;
    uint256 constant IC10y = 4477023473849411738703127180634467833852756335324993345031390653931237936074;
    uint256 constant IC11x = 7087865065671292189317083171039607832057374342975651912862036429884085017714;
    uint256 constant IC11y = 14041260949829516693901430300274499591451972802058440242699762905380735349152;
    uint256 constant IC12x = 9320842288075464511070762373132779912554876764566306310007815100721378587959;
    uint256 constant IC12y = 17773727801300076624059530602885600553144780811461625776951255403121548533270;
    uint256 constant IC13x = 2164967323075237929620580877839521683144979289044365223999302216586293755059;
    uint256 constant IC13y = 1053717494509269480891128603494044213225307317433396315338544630749436156073;
    uint256 constant IC14x = 13388311529946703043999516234701290846877897564829823037002288618928494355405;
    uint256 constant IC14y = 6356901889060069266170844158176948337542767654854831550116681152388006934626;
    uint256 constant IC15x = 6467936177809304845740836135205334880535347303523774035860532350458865266735;
    uint256 constant IC15y = 3644370316539801544154327243891165297985309853116065872319210158713994007260;
    uint256 constant IC16x = 3414137579352231521909979735424982034551445879268777002436325791594870220134;
    uint256 constant IC16y = 18693417990528408828726813469146169315559784408497522494497814115240558693309;
    uint256 constant IC17x = 16364300865399413439701502021211872367744840738390072641014724043911182244253;
    uint256 constant IC17y = 87808632716712636883058147684340542824817226179319921973026199702699718304;
    uint256 constant IC18x = 11600360461855346417385061293463677453847015030200327143520546951588755658076;
    uint256 constant IC18y = 5434350547659595243927984210989642254008195244646994233465543730257566170608;
    uint256 constant IC19x = 5941692958046154456925055347471434375253747793564927003822122672557247120659;
    uint256 constant IC19y = 181282939341329900119543132059090565961946456481242165056756831756522943297;
    uint256 constant IC20x = 11855439885002322863166841402926566656894369583315509186139494240465866569157;
    uint256 constant IC20y = 17541186568864821420655255179376581021946149897489626255248035375083899482422;
    uint256 constant IC21x = 15524120057468602783392992805310660909546413314249761158145402363784967565736;
    uint256 constant IC21y = 17227757529912575172132051160013301080863986959541312780246137409034635850657;
    uint256 constant IC22x = 6933233097339342816728826942950272027424470943569316330803085287791482430318;
    uint256 constant IC22y = 16557599879872179551459702313895033834095978572896524572619916935700607773408;
    uint256 constant IC23x = 18289362240484450910636825653316748390779366929860182419714805618855282238632;
    uint256 constant IC23y = 13571058611401100549582486565779440123182189100412435750549253555024284664497;
    uint256 constant IC24x = 4273444454065956694609081884171880771970584924766331153074742325472965560034;
    uint256 constant IC24y = 7756445825167770604536417441171263088030203077318089507458906572956431664410;
    uint256 constant IC25x = 14440145594704953860649956692096205349166009023720266246518432133314202295546;
    uint256 constant IC25y = 8759955122265048372711811607193474892559272992481256591620166238600340441231;
    uint256 constant IC26x = 8633106434400735297793754926110020339990747938303165201724461134104787634304;
    uint256 constant IC26y = 8305707962808506528217341533526054324910975981511983900739758950039470290003;
    uint256 constant IC27x = 19864046324769211309702945318275840739548372582600270038427219260883149695797;
    uint256 constant IC27y = 8164929604591066426683626627074315258247751664758752522668429030285287834317;
    uint256 constant IC28x = 2233689946413006211094056087399794240964595862140499238928012430833598855800;
    uint256 constant IC28y = 17574999915647270603709809597582800384136714964453812802234916454666551336485;
    uint256 constant IC29x = 4567482162319417881992679340312263683589222255708144975645913163124386827365;
    uint256 constant IC29y = 15396367268949951451630321535986954801378914208509309329477089312478639510404;
    uint256 constant IC30x = 16054954446708552582244971037304143249291185869926481892832968057862362682628;
    uint256 constant IC30y = 2015711437537882536428965803375382581501774908219654428851422389247140722399;
    uint256 constant IC31x = 10366153954701539978729501462351075447699320136574913295909110993630869048837;
    uint256 constant IC31y = 20252987968470800220347566786250469658383217207755309774606067077935752204401;
    uint256 constant IC32x = 11689218224949650193145861832516868802499393522582810764754134202178931496257;
    uint256 constant IC32y = 8503759953756217242863648605510962669488097418624143627231473495652134309984;
    uint256 constant IC33x = 11369689551078253884765002062742232700791074021729214722421450516550145815341;
    uint256 constant IC33y = 16919339835632829904742793557285464641072056066137458898200498328447357891384;
    uint256 constant IC34x = 21648385652180256301825877164397478597530760285171780957369537265948915585741;
    uint256 constant IC34y = 4379546718986856565036467901204090687503078896554639938569779325324263060115;
    uint256 constant IC35x = 9798199549437486085461625196013733504915753867096657539727814400974815813716;
    uint256 constant IC35y = 20802662027622913636407296090528707871908023825724172970512229086727151106063;
    uint256 constant IC36x = 7122437398346856544664613622656255314708751876338420858534848745898229697904;
    uint256 constant IC36y = 17773427540341721639429114431070973746398595561203703254325697683275476610476;
    uint256 constant IC37x = 17750618657034032337994300456519032945054022572207987119697204019733794029273;
    uint256 constant IC37y = 8720830064583996805286672984570262990244294644659993796337898956265959684958;
    uint256 constant IC38x = 12250841859396062968013503474030393088997082294827312346442186832261853782335;
    uint256 constant IC38y = 11767623913749301879456304719237663049152989582430599085732442213511078808200;
    uint256 constant IC39x = 20283551153068638999949251024057823184960578364344446481031371751358035497663;
    uint256 constant IC39y = 711130701068062645566792114196136354671228125086530475416857259515543770485;
    uint256 constant IC40x = 6501467432475250449103429488400704789248328087189522962799064875208691975174;
    uint256 constant IC40y = 2979454587013182764648611373051066840270488448855578520224237888567150176013;
    uint256 constant IC41x = 3654169769967433889203297133328884777031387847314724332932071938775504969863;
    uint256 constant IC41y = 11196037444622087508543144945252489829629769766352036226122194403216698767703;
    uint256 constant IC42x = 16612594195438125539723051742030926283226735250643051008478961663733218564286;
    uint256 constant IC42y = 19507580588841189440836295368663109961263351094026959349179050695671791100505;
    uint256 constant IC43x = 4896366006505678520392610799710087562921957852850077527947494951509571933330;
    uint256 constant IC43y = 9740751218121909527761035008963552970177255810098325674389329709169322140079;
    uint256 constant IC44x = 8271965323957319944216979727955900819183411138269076167215360901123533535139;
    uint256 constant IC44y = 33539663969045349837973148652844371796514652817302746317861637290442223025;
    uint256 constant IC45x = 12801328573889143106770401166230371545473163065857949418706589889804012326121;
    uint256 constant IC45y = 9555476533571802009200598248435401229897111649705361337360362201305770930097;
    uint256 constant IC46x = 18401945043480721506163425243157713292574202987622392160168162938219656940157;
    uint256 constant IC46y = 17965514347479589855878567370032869885746496124800852192584664180084774429265;
    uint256 constant IC47x = 16969334409840985184874166180101313148116973856174958281518671933618575768921;
    uint256 constant IC47y = 920780940197705987536988476205067515513450795329258020883574946775025645551;
    uint256 constant IC48x = 2397039071214818316862172459503568765507886421712853799043982734012587976341;
    uint256 constant IC48y = 11437623841242364212746881163732884335333511679811839563064538793067805720767;
    uint256 constant IC49x = 2868397275824479431374012482521691156326843996510482184254280856324917583513;
    uint256 constant IC49y = 15418367492371574344724980782214849374980936911769784867196709729232878364054;
    uint256 constant IC50x = 16815125505845649963436455429879976093893101833173596679922096661641264622680;
    uint256 constant IC50y = 2380120389983488021876099019920770030358409645489346183526304190171677403341;
    uint256 constant IC51x = 18173993503035958382662574911963481993036552572390502081620560890085783066954;
    uint256 constant IC51y = 5920943156722434704726486949452087343813527506281241334889276007916223221658;
    uint256 constant IC52x = 17142540878228173856927382218678710977723555988676069641186470279462765016358;
    uint256 constant IC52y = 13532199590616812111521077239752428903214825414181489934960433667678143252285;
    uint256 constant IC53x = 2319694855948129337218620279004133378969539931499954522404673683049890829313;
    uint256 constant IC53y = 14598326514239743332753765460172842377869092454058546139915640596920451889387;
    uint256 constant IC54x = 20670165056938439970376760444143673092875018624303878271073183770097558804345;
    uint256 constant IC54y = 5603594203995717373453198931896115739255218717864522838757706034702533533568;
    uint256 constant IC55x = 17510621169782634073984938879657237368788814110209803907730583531648823218129;
    uint256 constant IC55y = 8445951709804344524364394081443234377225588257629057836580987501353409902806;
    uint256 constant IC56x = 20539675479585553494811276547593597482628529764325196582512798362484845156508;
    uint256 constant IC56y = 17506390108421656057295904349453774600079182153086718008194380502809397633124;
    uint256 constant IC57x = 11237482268843019581645778774745214776978136859855356481318652241340191005831;
    uint256 constant IC57y = 12434921907060615118811560651465022744811374011093317776397459782519416711211;
    uint256 constant IC58x = 7576790953631509731136625665146050611614187909665265073760021543708324277588;
    uint256 constant IC58y = 11706930392244757399975725713530100824241328189777154438662622777890570103848;
    uint256 constant IC59x = 21292450166645052281277047827892342386607321166863051842699635460411872132201;
    uint256 constant IC59y = 3666238324096118285644368692960596642143650244881807127165638185939977273117;
    uint256 constant IC60x = 11799889608551305486268064417259411256072033047986093765782882767595654507455;
    uint256 constant IC60y = 18578792479757555393847359871486735594406339970795066355052823563008683931228;
    uint256 constant IC61x = 17851801222233485104865711259584873532500220994555717426540846274270766588823;
    uint256 constant IC61y = 7549504078883184284212393087790968358823439692493317273114817014529026315679;
    uint256 constant IC62x = 152091945847309120798558210769335561309407292877607600376827316811970252234;
    uint256 constant IC62y = 21434073455350535208491167333783426201318062769475480298036100759819183046180;
    uint256 constant IC63x = 3232023966535447546968131542794981177535414213507615864788980339180189896585;
    uint256 constant IC63y = 12415803238455841452573366523407071513068384460509222911767121662936019308294;
    uint256 constant IC64x = 16741483319204754938063801458948188028468493904889648936777462588941465339086;
    uint256 constant IC64y = 7221348783011555534575243034975249404893291508514426320271871594424924055897;
    uint256 constant IC65x = 14516033279243797300042467058117093379491447792893137843895747184638806716757;
    uint256 constant IC65y = 8969689944152401537218104090828684005921140341232693175789292601300873796529;
    uint256 constant IC66x = 19912889204399940311520517520491744077321636453689980830384818155163756023094;
    uint256 constant IC66y = 6158395099245861569103583214856621874977716701448187507660815691550676895944;
    uint256 constant IC67x = 16367328311591751860906174336126628855128103424617470966456294606844352652183;
    uint256 constant IC67y = 16982323306893235345567768799184199982508099167240570767745925881273689232399;
    uint256 constant IC68x = 15900825137692184344665466367262147725141452539268438077992560276574642310347;
    uint256 constant IC68y = 5285800978819270108493094977424497066567791115164393977032477936578065461777;
    uint256 constant IC69x = 9900570426172887524408001417249991450075985269187741481971312857863486191122;
    uint256 constant IC69y = 14780855511346281068040811067061028100756027996005173246827605061521394952247;
    uint256 constant IC70x = 10479546010683639211845051867836061415463015793039845893449065076608461479162;
    uint256 constant IC70y = 14618373396441615998238989645928843149524684748738747449122671046240342355994;
    uint256 constant IC71x = 14766789826705155803094437348262446242040453553291246925081895432716076595140;
    uint256 constant IC71y = 15476907288370968180993563501319891353373152394526310825755573144811082502590;
    uint256 constant IC72x = 21347887902658100723232615512550613693900723603462979898699704962232284098990;
    uint256 constant IC72y = 10953631260328882051708112537835489044878327792900609080695347537158975607767;
    uint256 constant IC73x = 11060294264640437896088573301921602974975000450181414075239630878386070118979;
    uint256 constant IC73y = 14719048688993903379241574318015643480282580907189736220147317072123048226171;
    uint256 constant IC74x = 12044868635042942672048623929505824252421591266010747975924420867272244625056;
    uint256 constant IC74y = 4394808482786753304479642169358495621324114970672491180582232385972861304800;
    uint256 constant IC75x = 4125593400493307995566495906146687684003310370648293035236214571748612066836;
    uint256 constant IC75y = 155945562857372756054335402155211325055601368732326331965772994752930826823;
    uint256 constant IC76x = 1618332276786670918802937291377699639066971505393290985900785701804480003461;
    uint256 constant IC76y = 7490806536041459755916487783949633738471574461132795777393190189714014002131;
    uint256 constant IC77x = 16797262459520687234706684171872469685233708616885941258512401264421495856459;
    uint256 constant IC77y = 8875933620373384761819429893728936291955509147119909330501630136681328338280;
    uint256 constant IC78x = 1903705263856072617060971806586804951648572804890327574305107374950978251352;
    uint256 constant IC78y = 3008109917903266141413144619764065547406651397223460253694768346340795354848;
    uint256 constant IC79x = 11747099237938686819706376301191831265949256068882593439127889282498722858355;
    uint256 constant IC79y = 20624717565838284368798222071399317635449858149887737155046785777172081510132;
    uint256 constant IC80x = 9227254276651797550867470666846013597140139820583673201113973825412269388449;
    uint256 constant IC80y = 19024426217336410502120965747234390518549186795379423935704937433378866160726;
    uint256 constant IC81x = 19826352858314519146774843214069393379757962787113182982201429725228796418179;
    uint256 constant IC81y = 956501814216253695692411788440552848415459846987418427830073978360510259982;
    uint256 constant IC82x = 20427001280910995214379937733765764117945508333566760442227795999711420208095;
    uint256 constant IC82y = 3750479016535049549041637283175052019936708069836672863778729113660888347764;
    uint256 constant IC83x = 4348688598085370393607388358360460949637146059942110492570507043577399132920;
    uint256 constant IC83y = 5965934689886619485982208424221935050912057069624808604533435385850246963724;
    uint256 constant IC84x = 3178840560161970737770068093889175257628325220484851195510058208298192019688;
    uint256 constant IC84y = 5070518038490442969661206349510958521494872258676837974037373678779439423816;
    uint256 constant IC85x = 2418400385573989730474825584443223635035681101252511986134643568115234857019;
    uint256 constant IC85y = 448073827188838239303683083110483805099505045287851124732536911645227594967;
    uint256 constant IC86x = 21815396223581903327756453740969600846015575326223975532903991056611785048764;
    uint256 constant IC86y = 5874074348342699201915701100738550505733090326446906594586820442840504689094;
    uint256 constant IC87x = 219668006375059320040233016192483060301900071960257871681209662696476090054;
    uint256 constant IC87y = 16934905355283820185893508328879993679282250573657474331101132998533850745065;
    uint256 constant IC88x = 628743142294014351076022715410478539593181465598177208005488830321843711623;
    uint256 constant IC88y = 8116725546057428499201577594028426564239322405593926508972436084356028082656;
    uint256 constant IC89x = 12969455584719304897000872260759741872410278389145932522772738006431113937558;
    uint256 constant IC89y = 1620481844204347873766889592192396875666250976419450909523693645391991137917;
    uint256 constant IC90x = 19696430007607894570459312000523353115070763161152703761985975127105830372661;
    uint256 constant IC90y = 10377392385417122688416109467089186292871601158310152878391879939083341971369;
    uint256 constant IC91x = 21775782247369585108499008103632707484284309686982198634332283163049074577264;
    uint256 constant IC91y = 6046013743877090541421987252692994959857046928243485007100292064806528422739;
    uint256 constant IC92x = 2780489006500515294373082172731681925619296475379403580662698947022488819466;
    uint256 constant IC92y = 9978004098597057785412140046912861509575500832996113420071796712139931208934;
    uint256 constant IC93x = 20161133287308470186902657296207388446078097370264712261936872663188509451612;
    uint256 constant IC93y = 11641131215747079962517914881966216511235969680241856881560404577809410925817;
    uint256 constant IC94x = 454777422414105591162329334394269922214344701461694501324483856659155414203;
    uint256 constant IC94y = 2479965753804739815911557910226190427799072468557026957609492536978840028577;
    uint256 constant IC95x = 5924881530823586363876525227827014193157775897812214229972496458482192019887;
    uint256 constant IC95y = 9741971110797486374365715502988163641700635392317226124094519560548686863685;
    uint256 constant IC96x = 3377068132458973791143696354261780169597934580887189267917386180972915744907;
    uint256 constant IC96y = 9463641586430593006584037367226203787406126187181401557985611926316579989074;
    uint256 constant IC97x = 5216093040305316099832323564375440799614713379103453471456772170597817608290;
    uint256 constant IC97y = 18380247529525616456403013573289605027728261220966306659710743022378628142874;

    function getICCount() external pure returns (uint256) {
        return 98;
    }

    function getIC(uint256 index) public pure returns (uint256 x, uint256 y) {
        require(index < 98, "Index out of range");

        if (index == 0) return (IC0x, IC0y);
        if (index == 1) return (IC1x, IC1y);
        if (index == 2) return (IC2x, IC2y);
        if (index == 3) return (IC3x, IC3y);
        if (index == 4) return (IC4x, IC4y);
        if (index == 5) return (IC5x, IC5y);
        if (index == 6) return (IC6x, IC6y);
        if (index == 7) return (IC7x, IC7y);
        if (index == 8) return (IC8x, IC8y);
        if (index == 9) return (IC9x, IC9y);
        if (index == 10) return (IC10x, IC10y);
        if (index == 11) return (IC11x, IC11y);
        if (index == 12) return (IC12x, IC12y);
        if (index == 13) return (IC13x, IC13y);
        if (index == 14) return (IC14x, IC14y);
        if (index == 15) return (IC15x, IC15y);
        if (index == 16) return (IC16x, IC16y);
        if (index == 17) return (IC17x, IC17y);
        if (index == 18) return (IC18x, IC18y);
        if (index == 19) return (IC19x, IC19y);
        if (index == 20) return (IC20x, IC20y);
        if (index == 21) return (IC21x, IC21y);
        if (index == 22) return (IC22x, IC22y);
        if (index == 23) return (IC23x, IC23y);
        if (index == 24) return (IC24x, IC24y);
        if (index == 25) return (IC25x, IC25y);
        if (index == 26) return (IC26x, IC26y);
        if (index == 27) return (IC27x, IC27y);
        if (index == 28) return (IC28x, IC28y);
        if (index == 29) return (IC29x, IC29y);
        if (index == 30) return (IC30x, IC30y);
        if (index == 31) return (IC31x, IC31y);
        if (index == 32) return (IC32x, IC32y);
        if (index == 33) return (IC33x, IC33y);
        if (index == 34) return (IC34x, IC34y);
        if (index == 35) return (IC35x, IC35y);
        if (index == 36) return (IC36x, IC36y);
        if (index == 37) return (IC37x, IC37y);
        if (index == 38) return (IC38x, IC38y);
        if (index == 39) return (IC39x, IC39y);
        if (index == 40) return (IC40x, IC40y);
        if (index == 41) return (IC41x, IC41y);
        if (index == 42) return (IC42x, IC42y);
        if (index == 43) return (IC43x, IC43y);
        if (index == 44) return (IC44x, IC44y);
        if (index == 45) return (IC45x, IC45y);
        if (index == 46) return (IC46x, IC46y);
        if (index == 47) return (IC47x, IC47y);
        if (index == 48) return (IC48x, IC48y);
        if (index == 49) return (IC49x, IC49y);
        if (index == 50) return (IC50x, IC50y);
        if (index == 51) return (IC51x, IC51y);
        if (index == 52) return (IC52x, IC52y);
        if (index == 53) return (IC53x, IC53y);
        if (index == 54) return (IC54x, IC54y);
        if (index == 55) return (IC55x, IC55y);
        if (index == 56) return (IC56x, IC56y);
        if (index == 57) return (IC57x, IC57y);
        if (index == 58) return (IC58x, IC58y);
        if (index == 59) return (IC59x, IC59y);
        if (index == 60) return (IC60x, IC60y);
        if (index == 61) return (IC61x, IC61y);
        if (index == 62) return (IC62x, IC62y);
        if (index == 63) return (IC63x, IC63y);
        if (index == 64) return (IC64x, IC64y);
        if (index == 65) return (IC65x, IC65y);
        if (index == 66) return (IC66x, IC66y);
        if (index == 67) return (IC67x, IC67y);
        if (index == 68) return (IC68x, IC68y);
        if (index == 69) return (IC69x, IC69y);
        if (index == 70) return (IC70x, IC70y);
        if (index == 71) return (IC71x, IC71y);
        if (index == 72) return (IC72x, IC72y);
        if (index == 73) return (IC73x, IC73y);
        if (index == 74) return (IC74x, IC74y);
        if (index == 75) return (IC75x, IC75y);
        if (index == 76) return (IC76x, IC76y);
        if (index == 77) return (IC77x, IC77y);
        if (index == 78) return (IC78x, IC78y);
        if (index == 79) return (IC79x, IC79y);
        if (index == 80) return (IC80x, IC80y);
        if (index == 81) return (IC81x, IC81y);
        if (index == 82) return (IC82x, IC82y);
        if (index == 83) return (IC83x, IC83y);
        if (index == 84) return (IC84x, IC84y);
        if (index == 85) return (IC85x, IC85y);
        if (index == 86) return (IC86x, IC86y);
        if (index == 87) return (IC87x, IC87y);
        if (index == 88) return (IC88x, IC88y);
        if (index == 89) return (IC89x, IC89y);
        if (index == 90) return (IC90x, IC90y);
        if (index == 91) return (IC91x, IC91y);
        if (index == 92) return (IC92x, IC92y);
        if (index == 93) return (IC93x, IC93y);
        if (index == 94) return (IC94x, IC94y);
        if (index == 95) return (IC95x, IC95y);
        if (index == 96) return (IC96x, IC96y);
        if (index == 97) return (IC97x, IC97y);

        revert("Invalid index");
    }

    // Batch getter for gas optimization
    function getBatchIC(uint256 startIdx, uint256 count)
        external pure returns (uint256[] memory xs, uint256[] memory ys) {
        require(startIdx + count <= 98, "Batch out of range");

        xs = new uint256[](count);
        ys = new uint256[](count);

        for (uint256 i = 0; i < count; i++) {
            (xs[i], ys[i]) = getIC(startIdx + i);
        }
    }
}