// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

interface IVerifierConstants {
    function getIC(uint256 index) external pure returns (uint256 x, uint256 y);
    function getICCount() external pure returns (uint256);
}

contract VerifierConstants3 is IVerifierConstants {
    uint256 constant IC196x = 6936640763301803611845451847967117394935773857559635169971785474062173086136;
    uint256 constant IC196y = 7000611351467017520311270493653974437959395659671867925955648105911995608566;
    uint256 constant IC197x = 18961063910045288128481483461745164408801356732375938705951904868302453178196;
    uint256 constant IC197y = 711313068681490323480311505620722149011933787948204771731836936069573116171;
    uint256 constant IC198x = 18728292950988348873273906695798397456707483635720240961285327800831888643865;
    uint256 constant IC198y = 17365865428650737327373246528536756590240758703228751182187870580888314406696;
    uint256 constant IC199x = 12207286244269955837156568376408234674697034465969880527211912651586766608494;
    uint256 constant IC199y = 10964261315578053341525960966533636662700850974043288157206318339912660364860;
    uint256 constant IC200x = 13824893997859300855771873338607216931536148989784967176064716532872218727344;
    uint256 constant IC200y = 2557641676911505581142606560105887800958927961483792033950058172376660667302;
    uint256 constant IC201x = 21671475524631270009001304657088380236139223979284053768796813671415507801660;
    uint256 constant IC201y = 17371021592073770519079436058951293623268971936914703556295294068094886819263;
    uint256 constant IC202x = 718015029609724135060926550963705761794918521232766192025772622351720928750;
    uint256 constant IC202y = 14472888889470173073844367798412788807980143800442242437265037987765642603327;
    uint256 constant IC203x = 19238668211187020883219425334245184472265611812422841688464254066533897606713;
    uint256 constant IC203y = 5468507417873866138759520332253212170409693170233017520081973633759017682188;
    uint256 constant IC204x = 10706384856199015211859144242888456301334658701931355996179109616555704147496;
    uint256 constant IC204y = 21741023349050485718143372279103737450348979752066701103180492317336528731729;
    uint256 constant IC205x = 375754631077440713993066140384940681604347188018621737268138058621465997690;
    uint256 constant IC205y = 12661737027796459956790481592149917065536185876874591557656947037148794918992;
    uint256 constant IC206x = 19233793871447729557516247308426767546507716259506744209231824254476149913387;
    uint256 constant IC206y = 5196112147359045951280105163328482566865518511452183542147120734261136616429;
    uint256 constant IC207x = 15121842524216659913355966858784072720845868686763691066372340891803616294275;
    uint256 constant IC207y = 5463299757573592065076249610286693639927287319664058282558716746616639072560;
    uint256 constant IC208x = 4121687211532015648970010346760354525568641083358048993079420495131725130443;
    uint256 constant IC208y = 6376034559304540025407541517959451341768193746212947240168421724198173018208;
    uint256 constant IC209x = 7155919202017179463726933105341624140246577724021698091145150256637704432470;
    uint256 constant IC209y = 10525891476985008015351185701836597176806828348592534884489773070222976753352;
    uint256 constant IC210x = 14146968915262821625704185443349483196636926170142282582244257375197777371088;
    uint256 constant IC210y = 14325750154882776935303628253707899584002835599456143046100351776720668006050;
    uint256 constant IC211x = 9567012212166567983613879262649487047840934535466116624428370241525537834484;
    uint256 constant IC211y = 7453389616474113984835724905582827248231971928860817082122799159444995582261;
    uint256 constant IC212x = 21021066442567420580003568300324669001335135354935920202874874763924925165442;
    uint256 constant IC212y = 5350438990066327642825869608627108897552916879578625873668820123970000594377;
    uint256 constant IC213x = 1048283477298856128145718414700293786382836339558922747282551856508801768858;
    uint256 constant IC213y = 4293050517312538806502335981442339673145507207428129009082623010665787407145;
    uint256 constant IC214x = 21114376124239791811673850287494520331113211932533093711420788302932394125085;
    uint256 constant IC214y = 10681575048502416891254991227355026464914128361030527606984092668923852555830;
    uint256 constant IC215x = 21524795906931475748317709359235608380184343438377175360063877688207498576368;
    uint256 constant IC215y = 7406755285104550753857898228380986309629157959678068545436267478583067098904;
    uint256 constant IC216x = 8543056308542940526387215437622329094706045418058746886253822211530850193273;
    uint256 constant IC216y = 17171003897647780905760084400539622854504454665279086138385525627868454820322;
    uint256 constant IC217x = 13833639974520558511654481701791248080569956120161468914323753073391860950555;
    uint256 constant IC217y = 15426050544321148392883849694611662451894432393623771937089296935456183475720;
    uint256 constant IC218x = 11461306011922407183179444849529865083645540036068099569208496303900334422186;
    uint256 constant IC218y = 20345276191968324874478221806894588945034423177118612736301152251090542454772;
    uint256 constant IC219x = 1553993710057852726580347130155552484777128844514632813747071539594221414700;
    uint256 constant IC219y = 17270247568494326634499379857672491263913977629065902726307257350718230108404;
    uint256 constant IC220x = 13373416046109180620974497696646548849602901452176635287854478120779786108248;
    uint256 constant IC220y = 13843944161649652566882049920023115928431380867989840892767576681352439181555;
    uint256 constant IC221x = 9209666956110900305959987167544017216322403176787351926018627785908851154484;
    uint256 constant IC221y = 8072826400773106826091206266686065566788694539515809026443440660901502227966;
    uint256 constant IC222x = 8274878572234137797692774609856130386916013381118407732245906519695499680074;
    uint256 constant IC222y = 19512597030599754324413548604769509712739720031552236550339120378422036370540;
    uint256 constant IC223x = 12438420608526710777538131489878568587528284079370786167051001343464102578717;
    uint256 constant IC223y = 17095208683602836877700139795368481649421905496674316845937359518386813065451;
    uint256 constant IC224x = 291405289715559457089259434569943271665559755905971513147095521707756345953;
    uint256 constant IC224y = 948594645945951747531396435185555687353261986251058626061614368671475955018;
    uint256 constant IC225x = 10550496023424535353959358062782717361456947948207136217977905650167931669425;
    uint256 constant IC225y = 15185899085971858951384108316439148887748885660066673050735656548326236271175;
    uint256 constant IC226x = 7891860578136449793045268097504551925127333070763098131809593695464452226217;
    uint256 constant IC226y = 12789921220503485312814746202184978097725539053349118261428412752384233177835;
    uint256 constant IC227x = 13150588471570722461652518146380132608760423702624139188152370777239837462957;
    uint256 constant IC227y = 10305165644912130055163914034309152630681289037546884117907148122096301137641;
    uint256 constant IC228x = 21819357919180931387002899244050565065017838256675877030849791436186964068884;
    uint256 constant IC228y = 11245329310694882551729564894710534953445470251035113085077238483213917656018;
    uint256 constant IC229x = 21644358513532277266124871894467925407621641543768826364042202763022787696957;
    uint256 constant IC229y = 11576392516523272516047695513548310457963044462798158970978227991416656792204;
    uint256 constant IC230x = 5638154904958471957842339482320982684377483339513911647968477541814538709340;
    uint256 constant IC230y = 14111090932892547326996257401180542542368270809323295142584570719156778974489;
    uint256 constant IC231x = 2371551374105172667896844305784265163387859247233916108396522006642618959356;
    uint256 constant IC231y = 13766828941025320828259058396857610707530604336877635966367981105046548057949;
    uint256 constant IC232x = 13917463296711552632385161704814966087563994338003653249150677318445282109295;
    uint256 constant IC232y = 14590512734358335006949860328016711577848803951868024849053412735840118775856;
    uint256 constant IC233x = 17605328673338227026693328757550265528277412222895648029924740417112161144801;
    uint256 constant IC233y = 21644589648460944186661535111769074410173462269163158926262875685302684829448;
    uint256 constant IC234x = 18999251244746837981149739473002978519956119100088376419058136003413293646371;
    uint256 constant IC234y = 17956172504768408716736041859429573332185469586459150548164060727243319929551;
    uint256 constant IC235x = 16658934236160300556619276681188013131193691595197529089837326634320623346838;
    uint256 constant IC235y = 10599922720022538797937385724074548430897030616746217351372543385652324577668;
    uint256 constant IC236x = 7721793287509194206492624547026390255538867908672338962078116802309254178994;
    uint256 constant IC236y = 5383368597019360268934799947780492079316833962359147706099288524004818926346;
    uint256 constant IC237x = 20736911022169052689642300399958321511884486369089295472149979263472933382129;
    uint256 constant IC237y = 14106494568750263511998728681580962942498856816384015832569820751934051909026;
    uint256 constant IC238x = 8328483171294151149040383882087775065903205311993011383540459823569671860312;
    uint256 constant IC238y = 19807291476682600701163440816441833730673541599715758115480380892065693382624;
    uint256 constant IC239x = 8359574034028395444323457830261490482093146346966731982530765347608265916318;
    uint256 constant IC239y = 5486995129122843039711707435484691236131460926319236551728825880735298642948;
    uint256 constant IC240x = 20154453747123449420300233629105372588593262577010506772842652516594147993917;
    uint256 constant IC240y = 16729951775495732706443475835297666830306397966222175435167812791280188501952;
    uint256 constant IC241x = 14112730756495398619020295301355555918735746086778567073421607365767727224315;
    uint256 constant IC241y = 7765670206363172665177324999553278887195464572536097127556319594968670940176;
    uint256 constant IC242x = 14305886269574359048163121857586770608323226245211368721127413173949054110382;
    uint256 constant IC242y = 11243093382834443071198806826367948227834708846236662034792641213971720138611;
    uint256 constant IC243x = 5833410379395030740882914296303581059968657489982870487052118129599757953883;
    uint256 constant IC243y = 14214048749612172851118122752982430941564934117085294286155974352618601305312;
    uint256 constant IC244x = 5247877583728725358163968110534351946843247034515092359248079898174124359180;
    uint256 constant IC244y = 21104627212957049036551694422749273232307226487394421615681853695734847895018;
    uint256 constant IC245x = 5799762433958688901468554502155149276601144159583519860538503755263367045433;
    uint256 constant IC245y = 6377767599916648831690906209214831589677659149572516568047661858544373543503;
    uint256 constant IC246x = 18745041566814105836844952584011511394378067032472852057152344306864036334969;
    uint256 constant IC246y = 17744231767150397568336157670392809725037640572269613883446989092741456329984;
    uint256 constant IC247x = 4453964052855726513053296195648736283663067675006247307712417712232781837820;
    uint256 constant IC247y = 19613871767891059910094541237841221455558651101184147911742333988653579885005;
    uint256 constant IC248x = 5968290245788593326698500468046878728948079339546728433364068628648712125056;
    uint256 constant IC248y = 7637560148093549948118126620258905190882668967515103259446229309195854362546;
    uint256 constant IC249x = 6708269818605995976449087145927479791661943431257957396591761591248111170719;
    uint256 constant IC249y = 46901694991499234683463259374724022380380547155107683985368264263355310473;
    uint256 constant IC250x = 11066245864154719421788345294057689636213756329145960298478741639241392227839;
    uint256 constant IC250y = 5697209956287397053308355389737275123089543936285206444307648583598918145315;
    uint256 constant IC251x = 15225464970720451979265432519777236659212563671199501532302449602641060396036;
    uint256 constant IC251y = 20903517294227931436674307149596311019045181963916993472293238419901343293135;
    uint256 constant IC252x = 19176659988778911554728579346102316077543928663949947352026855585021066450032;
    uint256 constant IC252y = 6084969539040166419671610691192997666135105735510577237480476330462065627509;
    uint256 constant IC253x = 11968718940057383801357477372830059846061529805716518325475024677360683181463;
    uint256 constant IC253y = 18836077623308698499836192828599266138475385139168818060928300597520600516675;
    uint256 constant IC254x = 10489290719769876513071474720075306476973682475080114221638770565692985153148;
    uint256 constant IC254y = 8485569056941739692252076508342486320208737653138444358828146781330424310219;
    uint256 constant IC255x = 775982669722593403479006039806165141905520869469872485219692920743841641693;
    uint256 constant IC255y = 11406038069581393453786375624558250113116066546437493751076489851298514847827;
    uint256 constant IC256x = 14393907915419323311442828951559855564770042037662588978210974782375307573603;
    uint256 constant IC256y = 2064928423627330851197989485463229498156246200871215520970502333513492492276;
    uint256 constant IC257x = 5189868782348092588632982544967236553983965436818481949593543263171845563803;
    uint256 constant IC257y = 1435337236826221977726867005205965800253997760703349185258550729395110163875;
    uint256 constant IC258x = 21807562366830488448143676072699896204899157139359740583389794246444687968718;
    uint256 constant IC258y = 7233755523949337712289055544925893557302292892156381732258655077423831638565;
    uint256 constant IC259x = 18738817388892382777963584212502766448437389963380852969432510863672983296302;
    uint256 constant IC259y = 747703184543277857737430510145841474774334535170106516726639702776617809690;
    uint256 constant IC260x = 4972176834359830835792935919201849705931271361460993748062255549101560716333;
    uint256 constant IC260y = 7321613399169056533419728850890783552943959292335883350681061856665412561608;
    uint256 constant IC261x = 19756247230027576368226788653391127173949662369477071605873824863197736670098;
    uint256 constant IC261y = 15830098250279800085923027571655750157803319955880972777384677224403332137171;
    uint256 constant IC262x = 21050000804157595799021058015650498817312165705700097316831326486081054345917;
    uint256 constant IC262y = 20607031272567035778196896784448425397008683136366947097264104522815416387528;
    uint256 constant IC263x = 4231104897296934146192760648099271474183526445374579272054689553778213373383;
    uint256 constant IC263y = 11221582252058532363282147117244308942088768110712135590219281729012677964126;
    uint256 constant IC264x = 2795699681758427360146590988834422357521769774330232856500214045270381275638;
    uint256 constant IC264y = 20568620098704534803010050603769680012143775337106673461613347908062991367237;
    uint256 constant IC265x = 20809295056883393159697822273775738031919839178338065757255819058091396969952;
    uint256 constant IC265y = 7820466712028925070428275351137297129509914751052228162582461479961854218844;
    uint256 constant IC266x = 7314989813751637224106894168360363726664690990164236974965843117474842375015;
    uint256 constant IC266y = 20029133781409773085950277518966300733408805784550329188741540402997040133802;
    uint256 constant IC267x = 922138802424966360603659359394322542194554882826240592396281621260864241689;
    uint256 constant IC267y = 15585514168290467925163738971281436578804959473534921230443611694553362284267;
    uint256 constant IC268x = 3328064768944436979723555789992115540086088123108169989853643086758501225772;
    uint256 constant IC268y = 1376199049850533639313612483444330155101928492887237929282653168831983150561;
    uint256 constant IC269x = 1791742264168133955713030750939664474241880824912978590945647396794304544225;
    uint256 constant IC269y = 19690793732414713785729647518566377550770225775191568022182056298275863519335;
    uint256 constant IC270x = 11103039745851713701918701416719275222391894011772316633106124424352831985291;
    uint256 constant IC270y = 17348408219720995653936154456883665437630981311659439797181925347740327901402;
    uint256 constant IC271x = 16288984658968891448451178659585811717434043656629318575305859569469616514450;
    uint256 constant IC271y = 21725040458265430298133374100761276978912766181011254578461785604070537857154;
    uint256 constant IC272x = 11908535655937638951603068197790261078622842055032028144797760799226030515918;
    uint256 constant IC272y = 8926503653893758037609233467113137394264035623774631092507995768513848494834;
    uint256 constant IC273x = 3412252225888621981205144878040292886671594618919925547446956728115665271068;
    uint256 constant IC273y = 554997748925389989658434656670123477279351723367822385364780016905383286675;
    uint256 constant IC274x = 14928048450522376305531851814071755478334155902325526765287620436249199110379;
    uint256 constant IC274y = 19015677727192700048502089545913207912560641854308601805827498794569111513035;
    uint256 constant IC275x = 15283904369523300171048175601243063468328269879508349455294771839243657383217;
    uint256 constant IC275y = 19303083643071974866326052914219731925931503145807548785776909602864541981670;
    uint256 constant IC276x = 21628730046619076922055712713719883546281271395039455619007235598121837017389;
    uint256 constant IC276y = 7062504334818287002352704048578758657335811615792303128337732173868642536646;
    uint256 constant IC277x = 10394620099442913693899396169276819654237413106956881412312578755294823687856;
    uint256 constant IC277y = 10394725162371655030729423588905918432246766338884570384879040110945824182576;
    uint256 constant IC278x = 13162782689976084700721618497801188248269671497386158382974493739479501605329;
    uint256 constant IC278y = 10912760718646991476845763289861522929021440321451260108938218821807278028291;
    uint256 constant IC279x = 10765191950753623814562662792288915947409955533464614014096634856220798132738;
    uint256 constant IC279y = 19781993471537669978557271538757101416056723222470300394517055752550219734502;
    uint256 constant IC280x = 14918762598368196125340073464807496272602557717846886280536118809909902077870;
    uint256 constant IC280y = 6893842514247738720382331418733289047548608748153386083668712537646640867158;
    uint256 constant IC281x = 10582443619725232968333316559056260686716678876031300446748659968709862070148;
    uint256 constant IC281y = 10483591269278547265018441515737691887096758060190074660053096206593696232616;
    uint256 constant IC282x = 14854764870587915775347171733674597728822881490831602318115209489626825239475;
    uint256 constant IC282y = 17225587904372978861127977290847473346540427438926836823930153478916992036504;
    uint256 constant IC283x = 1374083523835366713608560232408798508982897288824832066313710101534945315369;
    uint256 constant IC283y = 3612470021573412541037376849515990996879285596026754966756623089682953311611;
    uint256 constant IC284x = 6422234827213566536115002637741910736155707975272859833865622335122408468937;
    uint256 constant IC284y = 12393815172070946809224091821779208273372372525564992294956798847074577327722;
    uint256 constant IC285x = 3965095090800139905149874757924801995270717886555506282459906046821963446334;
    uint256 constant IC285y = 5780538892475155245055404367126770519037729956664383259989799940810096236781;
    uint256 constant IC286x = 1091729819626250399634395928412099566435045087217639965105429134126707607150;
    uint256 constant IC286y = 328838574257007936668286779915889972630350563327170148863249381688917074852;
    uint256 constant IC287x = 13315691773626238301104378984135902031675062057007902013070471670179021199771;
    uint256 constant IC287y = 18037840616508997265506369989301253952401708936887028319583782378491566257179;
    uint256 constant IC288x = 6870177057684042056565689974422855412800776916189108956887898757022428964269;
    uint256 constant IC288y = 8364524601925964937167594727610326320766683590413104995307847947813572455697;
    uint256 constant IC289x = 14671425209276320289632076788472494998375197686173283769220929737390473771850;
    uint256 constant IC289y = 20355899641073026009083042139677758725314144191174525470796094633429121168524;
    uint256 constant IC290x = 709202092704816377479403912766935357184374834102375605472159516625821570534;
    uint256 constant IC290y = 20659305341278087640880706705004346413124697678665352467756885299637745707828;
    uint256 constant IC291x = 20846142525411814476149516552013069621483938768198843119723416477720281905201;
    uint256 constant IC291y = 17023851164061896389888040615275121601285207838941624490124602952142763475751;
    uint256 constant IC292x = 1908131845417844362252891449989068434471709207333459276163435956222594767723;
    uint256 constant IC292y = 5117572054212180332445337620979420553648548826092437931686133658911629794124;

    function getICCount() external pure returns (uint256) {
        return 97;
    }

    function getIC(uint256 index) public pure returns (uint256 x, uint256 y) {
        require(index < 97, "Index out of range");

        if (index == 0) return (IC196x, IC196y);
        if (index == 1) return (IC197x, IC197y);
        if (index == 2) return (IC198x, IC198y);
        if (index == 3) return (IC199x, IC199y);
        if (index == 4) return (IC200x, IC200y);
        if (index == 5) return (IC201x, IC201y);
        if (index == 6) return (IC202x, IC202y);
        if (index == 7) return (IC203x, IC203y);
        if (index == 8) return (IC204x, IC204y);
        if (index == 9) return (IC205x, IC205y);
        if (index == 10) return (IC206x, IC206y);
        if (index == 11) return (IC207x, IC207y);
        if (index == 12) return (IC208x, IC208y);
        if (index == 13) return (IC209x, IC209y);
        if (index == 14) return (IC210x, IC210y);
        if (index == 15) return (IC211x, IC211y);
        if (index == 16) return (IC212x, IC212y);
        if (index == 17) return (IC213x, IC213y);
        if (index == 18) return (IC214x, IC214y);
        if (index == 19) return (IC215x, IC215y);
        if (index == 20) return (IC216x, IC216y);
        if (index == 21) return (IC217x, IC217y);
        if (index == 22) return (IC218x, IC218y);
        if (index == 23) return (IC219x, IC219y);
        if (index == 24) return (IC220x, IC220y);
        if (index == 25) return (IC221x, IC221y);
        if (index == 26) return (IC222x, IC222y);
        if (index == 27) return (IC223x, IC223y);
        if (index == 28) return (IC224x, IC224y);
        if (index == 29) return (IC225x, IC225y);
        if (index == 30) return (IC226x, IC226y);
        if (index == 31) return (IC227x, IC227y);
        if (index == 32) return (IC228x, IC228y);
        if (index == 33) return (IC229x, IC229y);
        if (index == 34) return (IC230x, IC230y);
        if (index == 35) return (IC231x, IC231y);
        if (index == 36) return (IC232x, IC232y);
        if (index == 37) return (IC233x, IC233y);
        if (index == 38) return (IC234x, IC234y);
        if (index == 39) return (IC235x, IC235y);
        if (index == 40) return (IC236x, IC236y);
        if (index == 41) return (IC237x, IC237y);
        if (index == 42) return (IC238x, IC238y);
        if (index == 43) return (IC239x, IC239y);
        if (index == 44) return (IC240x, IC240y);
        if (index == 45) return (IC241x, IC241y);
        if (index == 46) return (IC242x, IC242y);
        if (index == 47) return (IC243x, IC243y);
        if (index == 48) return (IC244x, IC244y);
        if (index == 49) return (IC245x, IC245y);
        if (index == 50) return (IC246x, IC246y);
        if (index == 51) return (IC247x, IC247y);
        if (index == 52) return (IC248x, IC248y);
        if (index == 53) return (IC249x, IC249y);
        if (index == 54) return (IC250x, IC250y);
        if (index == 55) return (IC251x, IC251y);
        if (index == 56) return (IC252x, IC252y);
        if (index == 57) return (IC253x, IC253y);
        if (index == 58) return (IC254x, IC254y);
        if (index == 59) return (IC255x, IC255y);
        if (index == 60) return (IC256x, IC256y);
        if (index == 61) return (IC257x, IC257y);
        if (index == 62) return (IC258x, IC258y);
        if (index == 63) return (IC259x, IC259y);
        if (index == 64) return (IC260x, IC260y);
        if (index == 65) return (IC261x, IC261y);
        if (index == 66) return (IC262x, IC262y);
        if (index == 67) return (IC263x, IC263y);
        if (index == 68) return (IC264x, IC264y);
        if (index == 69) return (IC265x, IC265y);
        if (index == 70) return (IC266x, IC266y);
        if (index == 71) return (IC267x, IC267y);
        if (index == 72) return (IC268x, IC268y);
        if (index == 73) return (IC269x, IC269y);
        if (index == 74) return (IC270x, IC270y);
        if (index == 75) return (IC271x, IC271y);
        if (index == 76) return (IC272x, IC272y);
        if (index == 77) return (IC273x, IC273y);
        if (index == 78) return (IC274x, IC274y);
        if (index == 79) return (IC275x, IC275y);
        if (index == 80) return (IC276x, IC276y);
        if (index == 81) return (IC277x, IC277y);
        if (index == 82) return (IC278x, IC278y);
        if (index == 83) return (IC279x, IC279y);
        if (index == 84) return (IC280x, IC280y);
        if (index == 85) return (IC281x, IC281y);
        if (index == 86) return (IC282x, IC282y);
        if (index == 87) return (IC283x, IC283y);
        if (index == 88) return (IC284x, IC284y);
        if (index == 89) return (IC285x, IC285y);
        if (index == 90) return (IC286x, IC286y);
        if (index == 91) return (IC287x, IC287y);
        if (index == 92) return (IC288x, IC288y);
        if (index == 93) return (IC289x, IC289y);
        if (index == 94) return (IC290x, IC290y);
        if (index == 95) return (IC291x, IC291y);
        if (index == 96) return (IC292x, IC292y);

        revert("Invalid index");
    }

    // Batch getter for gas optimization
    function getBatchIC(uint256 startIdx, uint256 count)
        external pure returns (uint256[] memory xs, uint256[] memory ys) {
        require(startIdx + count <= 97, "Batch out of range");

        xs = new uint256[](count);
        ys = new uint256[](count);

        for (uint256 i = 0; i < count; i++) {
            (xs[i], ys[i]) = getIC(startIdx + i);
        }
    }
}